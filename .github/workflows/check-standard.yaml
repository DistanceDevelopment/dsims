# Based on https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '4.2',   xref: true}
          - {os: macOS-latest,   r: '4.2',   xref: true}
          - {os: ubuntu-18.04,   r: 'devel', xref: true}
          - {os: ubuntu-18.04,   r: '4.2',   xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # don't treat missing suggested packages as error
      _R_CHECK_FORCE_SUGGESTS_: false
      # Some packages might unavailable on the older versions, so let's ignore xref warnings
      _R_CHECK_RD_XREFS_: ${{ matrix.config.xref }}
      # This is required to make Linux tests pass. We add it to all workflows
      # as it does not have any impact on Windows and macOS
      DISPLAY: :99.0

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
      
      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "18.04"))')
      
      - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          # XQuartz is needed by vdiffr
          brew install xquartz
          
          # Use only binary packages
          echo 'options(pkgType = "binary")' >> ~/.Rprofile

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
        
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
          
