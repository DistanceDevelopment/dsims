[{"path":"/articles/dsims-examples.html","id":"preamble","dir":"Articles","previous_headings":"","what":"Preamble","title":"Transition from `DSsim` to `dsims`","text":"first version simulation engine package called DSsim (Marshall, 2019); improving GIS capabilities R later released second efficient simulation package, dsims (Marshall, 2022a). vignette originally written DSsim use now demonstrate dsims also example users DSsim showing transition dsims. two packages largely function names loading together advised, vignette therefore leave DSsim code comments comparison dsims code. Please note normal comments follow single # DSsim code follows double ##. also noted dsims now uses distance sampling survey design package, dssd (Marshall, 2022b), generate transects based design shapefiles containing transects longer need created advance. goal transition dsims DSsim find need sections including section running simulations. latter sections go run series additional simulations investigating pooling robustness covariate parameter estimation respect truncation distance. completely new distance sampling simulations alternative place start Getting Started vignette inside dsims package. vignette uses dsims compare systematic parallel design zigzag design assess accuracy/precision trade . view open R installing dsims, enter following code:","code":"vignette(\"GettingStarted\", package = \"dsims\") ## Warning: vignette 'GettingStarted' not found"},{"path":"/articles/dsims-examples.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Transition from `DSsim` to `dsims`","text":"Distance sampling process study area surveyed estimate size population within . can thought extension plot sampling. However, plot sampling assumes objects within plots detected, distance sampling relaxes assumption. Distance sampling makes assumptions distribution objects respect transects satisfy assumptions transects (points lines) must randomly located within study region. Note purposes distance sampling object can either individual cluster individuals. next step distance sampling record distances detected object transect detected fit detection function. function can estimate many objects missed hence total number covered area. example, Figure 1 shows histograms distances might collected line transect survey, fitted detection function. lines placed random within study region expect average number object occur given distance transect. Therefore drop number detection increasing distance line can attributed failure detect objects. can therefore estimate detection function probability seeing object within covered region chosen truncation distance area curve (shaded grey) divided area rectangle. Figure 1: example detection function. histogram shows example distances recorded line transect. smooth curve detection function. grey shaded area represents number detected objects diagonal hash region represents number objects covered region detected. R package dsims allows users simulate point line transect surveys, test range design analysis decisions specific population interest. simulate surveys user must make assumptions population interest detection process giving rise observed distances. Simulations can repeated range assumptions user can confident chosen design perform well despite uncertainty.","code":""},{"path":"/articles/dsims-examples.html","id":"introduction-to-dsims","dir":"Articles","previous_headings":"Introduction","what":"Introduction to dsims","title":"Transition from `DSsim` to `dsims`","text":"dsims takes information user study region, population detection process uses generate distance sampling data. dsims can asked fit detection functions data produce estimates density, abundance associated uncertainty. dsims splits process three stages. Firstly, generates instance population set survey transects. Secondly, simulates distance sampling survey using assumed detection function(s) provided user. Lastly, dsims analyses data survey. Figure 2 illustrates simulation process highlights information must provided user. Distance sampling simulations can useful researchers wish optimise survey design specific study regions species interest order try achieve accurate / precise estimates populations. Setting running simulations optimise design small cost comparison associated actually completing survey! Figure 2: Illustrates simulation process. Blue rectangles indicate information supplied user. Green rectangles objects created dsims simulation process. Orange diamonds indicate processes carried dsims. dsims written using S4 object orientated system R. S4 system formal rigorous style object orientated programming commonly implemented S3. process defining simulation involves specification many variables relating survey region, population, survey design finally analysis. design dsims based around descriptions contained class formal S4 class definition procedure ensures objects created correct format simulation. objects created dsims instances S4 classes, user wishes access information within symbol used slightly different. access named parts S3 objects “$” symbol used, S4 objects “@” symbol must used. following code demonstrates .","code":"# load simulation package ## library(DSsim) library(dsims)  # Make a default region object ## eg.region <- make.region() eg.region <- make.region()  # Let's check the structure of the object we have created str(eg.region) ## Formal class 'Region' [package \"dssd\"] with 5 slots ##   ..@ region.name: chr \"region\" ##   ..@ strata.name: chr \"region\" ##   ..@ units      : chr(0)  ##   ..@ area       : num 1e+06 ##   ..@ region     :Classes 'sf' and 'data.frame': 1 obs. of  2 variables: ##   .. ..$ region  : chr \"study_ar\" ##   .. ..$ geometry:sfc_POLYGON of length 1; first list element: List of 1 ##   .. .. ..$ : num [1:5, 1:2] 0 0 2000 2000 0 0 500 500 0 0 ##   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\" ##   .. ..- attr(*, \"sf_column\")= chr \"geometry\" ##   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA ##   .. .. ..- attr(*, \"names\")= chr \"region\" # If we wanted to extract the area of the region we would use eg.region@area ## [1] 1e+06"},{"path":"/articles/dsims-examples.html","id":"example-simulation-study-which-truncation-distance","dir":"Articles","previous_headings":"Introduction","what":"Example Simulation Study: Which Truncation Distance?","title":"Transition from `DSsim` to `dsims`","text":"usual distance sampling studies truncate data distance transect. observations far away transect lesser importance fitting detection function also sparse observations large distances high influence model selection possibly increase variability estimated abundance / density. Buckland et al. (2001) suggest truncating data probability detection around 0.15 general rule thumb. However, distance sampling data often costly obtain discarding data points can feel counter intuitive. vignette investigate truncation distance distance sampling analyses. series three simulations outlined . Firstly, vignette investigate data generated assuming simple half normal detection function every object probability detection specific distance transect. Figure 3 shows simple half normal detection function three possible truncation distances \\(1*\\sigma\\), \\(2*\\sigma\\) \\(3*\\sigma\\) \\(\\sigma\\) scale parameter half normal detection function. truncation distance \\(2*\\sigma\\) gives probability detection 0.135 close 0.15 rule thumb. Figure 3: Half-normal detection function showing 3 proposed truncation distances \\(1*\\sigma\\), \\(2*\\sigma\\) \\(3*\\sigma\\). truncation distance twice sigma gives probability detection 0.135 close 0.15 rule thumb. first set simulations assume simple half normal detection function, reality individual objects clusters objects likely varying probability detected based certain characteristics. Perhaps behaviour males make easier detect. also easy see larger clusters individuals might easier spot large distances small clusters. also investigate effects truncation distance individual level covariates affect probability detection. Figure 4 shows covariates may affect detectability. use simulated distance data one covariate (sex) investigate effects truncation assume able measure covariate affecting detectability assume can therefore include relevant covariate detection function model. Figure 4: Half-normal detection function varies based cluster size animal sex.","code":""},{"path":"/articles/dsims-examples.html","id":"model-uncertainty-and-pooling-robustness","dir":"Articles","previous_headings":"Introduction","what":"Model Uncertainty and Pooling Robustness","title":"Transition from `DSsim` to `dsims`","text":"simulate data, provide detection function generate detections, therefore know underlying true detection function. collecting data field, information, rely form model selection. One method model selection compare information criterion, dsims allows user select either AIC, AICc BIC model selection criteria. simulations use AIC allow dsims select half-normal hazard rate model first two sets simulations. addition, probability detection affected covariates may single underlying detection function combination detection functions giving rise observed data. situation can either model detectability function covariates rely concept called pooling robustness. Pooling robustness refers fact distance sampling techniques robust pooling multiple detection functions one. means necessarily need include covariates affect detectability detection function accurately estimate density / abundance. vignette examine concept pooling robustness see affected truncation distance.","code":""},{"path":"/articles/dsims-examples.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Transition from `DSsim` to `dsims`","text":"vignette guide steps create run series simulations investigate effects varying truncation distance data generated simple half-normal detection function detection function detectability affected covariate.","code":""},{"path":"/articles/dsims-examples.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Transition from `DSsim` to `dsims`","text":"First load dsims library.","code":"## library(DSsim) library(dsims)"},{"path":"/articles/dsims-examples.html","id":"simulation-components","dir":"Articles","previous_headings":"","what":"Simulation Components","title":"Transition from `DSsim` to `dsims`","text":"detailed Introduction dsims simulation comprises number components. dsims designed components defined individually grouped together simulation. helps keep process clear also allows reuse simulation components different simulations. function names create simulation component simulation takes form make.<component>.","code":""},{"path":"/articles/dsims-examples.html","id":"region","dir":"Articles","previous_headings":"Simulation Components","what":"Region","title":"Transition from `DSsim` to `dsims`","text":"simulations use rectangular study region 5 km 20 km. Survey regions can defined units units must throughout components simulation. shapefile used create survey region, information units taken .prj file. define coordinates m. simple study region (Figure 5) vertices can simply provide coordinates. change DSsim now need turn coordinates sf polygon shape prior creating region. step documented . Note standard shapefiles outer polygon coordinates given clockwise direction, sf uses counter clockwise external polygons clockwise holes within polygons. details creating multi-part multi-strata sf objects can found end multi-strata dssd vignette. also note units longer plotting option. plot functions modified use ggplot2 additional plotting options desired ggplot object can captured modified. Figure 5: study region.","code":"## # Create a polgon ## poly1 <- data.frame(x = c(0,0,20000,20000,0), y = c(0,5000,5000,0,0)) ##  ## # Create an empty list ## # Store the polygon inside a list in the first element of the coords list referring to strata 1. ## coords <- list() ## coords[[1]] <- list(poly1)  # Create an sf polgon library(sf) # Put the coordinates of the polygon in a matrix poly1 = matrix(c(0,0, 20000,0, 20000,5000, 0,5000, 0,0),ncol=2, byrow=TRUE) # Turn them into an sf polygon pl1 = st_polygon(list(poly1))  ## # Create the survey region ## region <- make.region(region.name = \"study area\",  ##                       units = \"m\", ##                       coords = coords) ## # The plot function allows plotting in km or m. ## plot(region, plot.units = \"km\")  # Create the survey region region <- make.region(region.name = \"study area\",                        units = \"m\",                       shape = pl1) # The plot function allows plotting in km or m. plot(region)"},{"path":"/articles/dsims-examples.html","id":"population","dir":"Articles","previous_headings":"Simulation Components","what":"Population","title":"Transition from `DSsim` to `dsims`","text":"now define population within study region. Firstly, must describe distribution population defining density surface. simulations assume uniform distribution animals throughout study region. dsims generate sf grid describing density surface us provide x (optionally y) spacing constant density value surface. y spacing omitted assumed equal x spacing. example value constant important generate animals based fixed population size rather using exact values density grid. two argument name changes make.density function: region.obj now region density.gam now fitted model. buffer argument longer needed now option supply formula density based x y using density.formula. Figure 6: density surface. aside, wished add areas higher lower density density surface using add.hotspot function dsims. function adds hot low spots based Gaussian decay function. provide central coordinates sigma value tell dsims location shape hot/low spot. amplitude argument gives value hot low spot centre combined existing density surface addition. code used dsims identical used DSsim repeated code chunk . Figure 7: non-uniform density surface. can now define aspects population. simple case (covariates) need define fixed population size provide region density grid created . fixed population size 200 selected value sufficient give around 100 detections per simulated survey large cause simulations run slowly. minimum recommended number detections fitting detection function 60 (Buckland et al., 2001). minor argument names changes function: region.obj now region density.obj now density. simulations involving covariates need define individuals allocated covariate values. dsims allows user either define discrete distribution alternatively provide distribution (Normal, Poisson, Zero-truncated Poisson Lognormal) associated parameters. simulation use sex covariate assume 50% population female 50% male. example sex covariate defined exactly way DSsim. Note defining covariates using distributions format changed slightly. example included . dsims format simplified covariate distribution list provided stratum now just list named elements ‘distribution’ distribution parameters. Please refer help parameters defined distribution examples.","code":"## # Create the density surface ## density <- make.density(region.obj = region,  ##                         x.space = 100,  ##                         constant = 1) ##  ## # Plot the density surface ## plot(density, style = \"blocks\") ## plot(region, add = TRUE)  density <- make.density(region = region,                          x.space = 100,                          constant = 1)  # Plot the density surface plot(density, region) # Add a hotspot to the density surface, centre located at x = 15000, y = 4000 with  # a Gaussian decay parameter sigma = 1500. The value at the centre point will now  # be 1 (the current value of the density surface defined above) + 0.5 = 1.5 eg.density <- add.hotspot(density, centre = c(15000,4000), sigma = 1500, amplitude = 0.5) # Add a lowspot to this new density surface (eg.density) eg.density <- add.hotspot(eg.density, centre = c(10000,3000), sigma = 1000, amplitude = -0.25) # Plot the density surface plot(eg.density, region) ## # Create the population description, with a population size N = 200 ## pop.desc <- make.population.description(region.obj = region,  ##                                             density.obj = density,  ##                                             N = 200, ##                                             fixed.N = TRUE)  # Create the population description, with a population size N = 200 pop.desc <- make.population.description(region = region,                                          density = density,                                          N = 200,                                         fixed.N = TRUE) # Create the covariate list covariate.list <- list() # The population will be 50% males and 50% females covariate.list$sex <- list(data.frame(level = c(\"female\", \"male\"),                                        prob = c(0.5,0.5)))   ## # Create the population description, with a population size N = 200 ## pop.desc.cov <- make.population.description(region = region,  ##                                             density = density,  ##                                             covariates = covariate.list,  ##                                             N = 200)  # Create the population description, with a population size N = 200 pop.desc.cov <- make.population.description(region = region,                                              density = density,                                              covariates = covariate.list,                                              N = 200) ## covariate.list <- list() ## covariate.list$size <- list(list(\"poisson\", list(lambda = 35)))  covariate.list <- list() covariate.list$size <- list(list(distribution = \"poisson\", lambda = 35))"},{"path":"/articles/dsims-examples.html","id":"detectability","dir":"Articles","previous_headings":"Simulation Components","what":"Detectability","title":"Transition from `DSsim` to `dsims`","text":"Detectability refers detection function functions feed simulation generate observations. simple case can set animals probability detection given distance transect. define half-normal detection function scale parameter \\(\\sigma = 200\\) data generation truncation distance 1000. truncation distance defined aid simulation efficiency means detections can occur beyond value. can plot function check defined correctly. defined survey region m scale parameter truncation distance also assumed metres. scale parameter 200 selected average gives around 100 detections truncation distance 1000m chosen population size 200. Defining detectability dsims uses identical code DSsim code repeated . Figure 8: detection functions males females. covariates population may choose vary scale parameter detection function based covariate values. dsims assumes scale parameter function covariates follows: \\[ \\sigma = exp(\\beta_0+\\sum_{j=1}^{q}\\beta_{j}z_{ij}) \\] \\(\\beta_0\\) log scale parameter supplied make.detectability, \\(\\beta_j\\)’s covariate parameters supplied log scale \\(z_{ij}\\) ith value jth covariate. formula taken Buckland et al. (2004). covariate values selected males higher probability detection females. values selected example give sample size around 150 observations 1000m truncation value population 200. Defining detectability dsims uses identical code DSsim code repeated . Figure 9: detection functions males females.","code":"# Make a simple half normal detection function with a scale parameter of 200 detect.hn <- make.detectability(key.function = \"hn\",                                  scale.param = 200,                                   truncation = 1000) # We can now visualise these detection functions plot(detect.hn, pop.desc) # Create the covariate parameter list cov.params <- list() # Note the covariate parameters are supplied on the log scale cov.params$sex = data.frame(level = c(\"female\", \"male\"),                              param = c(0, 1.5))  detect.cov <- make.detectability(key.function = \"hn\" ,                                  scale.param = 120,                                  cov.param = cov.params,                                   truncation = 1000)  # This setup gives a scale parameter of around 120 for the females and 540 for  # the males. We can calculate the sigma for the males using the formula above: # exp(log(scale.param) + sex.male) exp(log(120) + 1.5) ## [1] 537.8027 # We can now visualise these detection functions plot(detect.cov, pop.desc.cov)"},{"path":"/articles/dsims-examples.html","id":"design","dir":"Articles","previous_headings":"Simulation Components","what":"Design","title":"Transition from `DSsim` to `dsims`","text":"design section simulations dsims part differs significantly DSsim. DSsim generated basic designs anything complex needed generated externally loaded shapefiles. dsims uses dssd survey design package R specify designs generate transects . example use systematic parallel line transect design. recommended minimum number transects 10 20 (Buckland et al., 2001) set spacing lines 1000 m give 20 transects per survey. basic designs arguments make.design function changed slightly: region.obj now region design.details now design. Note, now important define truncation distance design, allows design coverage assessed. dssd also now provides comprehensive set arguments defining designs. investigate , please see Getting Started dssd vignette Multiple Strata dssd vignette. design objects now contain survey region need supply separate argument generating transects. like plot covered areas covered.area argument can set TRUE plot function, example covered areas may obvious truncation distance transect spacing. Figure 10: Example survey transects.","code":"## # Define the design ## design <- make.design(region.obj = region, ##                       transect.type = \"line\", ##                       design.details = c(\"parallel\", \"systematic\"), ##                       spacing = 1000)  # Define the design design <- make.design(region = region,                       transect.type = \"line\",                       design = \"systematic\",                       spacing = 1000,                       truncation = 1000) ## transects <- generate.transects(design, region = region) ## plot(region) ## plot(transects, col = 4, lwd = 2)  transects <- generate.transects(design) plot(region, transects)"},{"path":"/articles/dsims-examples.html","id":"analysis","dir":"Articles","previous_headings":"Simulation Components","what":"Analysis","title":"Transition from `DSsim` to `dsims`","text":"final stage simulation analyse distance sampling data generated. discussed , collecting data field know true underlying detection function therefore incorporate model uncertainty. can ask simulation fit two models, half-normal hazard rate, data select best model based minimum AIC. fairly substantial change syntax used define detection function models analyses well function name . syntax DSsim based mrds felt user friendly syntax used Distance R package (Miller, Rexstad, Thomas, Marshall, & Laake, 2019). therefore made code dsims simililar defining models Distance. code set truncation distance 600 later vary value investigate effects truncation distance simulation results. Note truncation distance can set value, exceed truncation value defined detectability design observations occur beyond values. addition, field may possible identify covariates affect detectability may wish fit detection function incorporates . case, following model appropriate:","code":"## ddf.analyses <- make.ddf.analysis.list(dsmodel = list(~cds(key = \"hn\", formula = ~1), ##                                                       ~cds(key = \"hr\", formula = ~1)),  ##                                        method = \"ds\", ##                                        truncation = 600) ##                                        criteria = \"AIC\",  ddf.analyses <- make.ds.analysis(dfmodel = list(~1, ~1),                                  key = c(\"hn\", \"hr\"),                                  criteria = \"AIC\",                                  truncation = 600) ## ddf.analyses.cov <- make.ddf.analysis.list(dsmodel = list(~mcds(key = \"hn\", formula = ~sex)),  ##                                            method = \"ds\", ##                                            truncation = 600)  ddf.analyses.cov <- make.ds.analysis(dfmodel = list(~sex),                                      key = c(\"hn\"),                                      truncation = 600)"},{"path":"/articles/dsims-examples.html","id":"simulations","dir":"Articles","previous_headings":"","what":"Simulations","title":"Transition from `DSsim` to `dsims`","text":"simulation created grouping components together. create two simulations , first simple case involve difference detectability animals, second include difference detectability due sex. Initially, include analyses allow selection half-normal hazard rate model, later modify run third set simulations fit detection function sex included covariate. created simulation objects, good idea check everything intended. function run.survey simulates single survey generates set transects population simulates survey process create distance sampling data set. can plotted (Figures 11 12). Figure 11: Example survey. Top left - example set transects. Top right - example population. Bottom left - detections transects. Bottom right - histogram distances observations transect detected. now create second simulation object simulations covariates. can re-use design component add new population description detectability include sex covariate. include non-covariate analyses final set simulations change fit covariate detection function model. Figure 12: Example survey. Top left - example set transects. Top right - example population. Bottom left - detections transects. Bottom right - histogram distances observations transect detected. check second simulation correctly generating covariate values population can examine first detections simulated distance data.","code":"## sim <- make.simulation(reps = 999,  ##                        region.obj = region, ##                        design.obj = design, ##                        detectability.obj = detect.hn, ##                        ddf.analyses.list = ddf.analyses) ##                        population.description.obj = pop.desc, ## # Produce simulation setup plots ## check.sim.setup(sim)  sim <- make.simulation(reps = 999,                         design = design,                        population.description = pop.desc,                        detectability = detect.hn,                        ds.analysis = ddf.analyses) # Produce survey and plot it survey <- run.survey(sim) plot(survey, region) ## sim.cov <- make.simulation(reps = 999,  ##                        region.obj = region, ##                        design.obj = design, ##                        population.description.obj = pop.desc.cov, ##                        detectability.obj = detect.cov, ##                        ddf.analyses.list = ddf.analyses) ## # Produce simulation setup plots ## check.sim.setup(sim.cov)  sim.cov <- make.simulation(reps = 999,                         design = design,                        population.description = pop.desc.cov,                        detectability = detect.cov,                        ds.analysis = ddf.analyses) # Produce survey and plot it survey.cov <- run.survey(sim.cov) plot(survey.cov, region) head(survey.cov@dist.data) ##    object individual obs.Region.Label Sample.Label distance        x         y ## 2       2          2       study area            1 439.6622 680.6209  833.2067 ## 15     15         13       study area            1 127.7175 113.2412 3562.4237 ## 16     16         14       study area            1 385.4299 626.3886 2696.8466 ## 36     36         35       study area            1 699.3118 940.2705 4044.2287 ## 47     47         45       study area            1 521.5709 762.5297  411.8589 ## 87     87         89       study area            1 349.0618 590.0205  710.0814 ##     sex Region.Label Effort  Area ## 2  male   study area   5000 1e+08 ## 15 male   study area   5000 1e+08 ## 16 male   study area   5000 1e+08 ## 36 male   study area   5000 1e+08 ## 47 male   study area   5000 1e+08 ## 87 male   study area   5000 1e+08"},{"path":"/articles/dsims-examples.html","id":"running-simulations","dir":"Articles","previous_headings":"","what":"Running Simulations","title":"Transition from `DSsim` to `dsims`","text":"run simulations syntax changed slightly run DSsim run.simulations dsims object argument now simulation. simulations can still run parallel using run.parallel maximum cores set using max.cores counter argument retained. transect.path argument run.simulation function dsims can optionally supply folder filename wish load pre-generated shapefiles (DSsim specified design). option expected widely used incorporated allow simulations Distance Windows run using dsims. demonstrate run basic simulation example. see code incorporated multiple simulations run within loops following sections. Note advisable first run simulation iterations (<10) give indication run without issues setting hundreds / thousands repetitions. run simulation can view results using summary function provides glossary explain output. histogram estimates abundance can also viewed, Figure 13. Figure 13: Histogram abundance estimates simulation. goal simply learn syntax switching DSsim dsims can finish . remainder vignette loops simulations test altering truncation distance affects pooling robustness covariate parameter estimation. now dsims code shown.","code":"## sim <- run(object = sim)  sim <- run.simulation(simulation = sim, run.parallel = TRUE) # Display a summary of the simulation summary(sim) # Display a histogram of the estimates of abundance histogram.N.ests(sim) ##  ## GLOSSARY ## -------- ##  ## Summary of Simulation Output ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Region          : the region name. ## No. Repetitions : the number of times the simulation was repeated. ## No. Excluded Repetitions : the number of times the simulation failed ##                   (too few sightings, model fitting failure etc.) ##  ## Summary for Individuals ## ~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Summary Statistics: ##    mean.Cover.Area : mean covered across simulation. ##    mean.Effort     : mean effort across simulation. ##    mean.n          : mean number of observed objects across ##                      simulation. ##    mean.n.miss.dist: mean number of observed objects where no distance ##                     was recorded (only displayed if value > 0). ##    no.zero.n       : number of surveys in simulation where ##                      nothing was detected (only displayed if value > 0). ##    mean.ER         : mean encounter rate across simulation. ##    mean.se.ER      : mean standard error of the encounter rates ##                      across simulation. ##    sd.mean.ER      : standard deviation of the encounter rates ##                      across simulation. ##  ## Estimates of Abundance: ##    Truth            : true population size, (or mean of true ##                       population sizes across simulation for Poisson N. ##    mean.Estimate    : mean estimate of abundance across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates of ##                       abundance ##    sd.of.means      : the standard deviation of the estimates ##  ## Estimates of Density: ##    Truth            : true average density. ##    mean.Estimate    : mean estimate of density across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates. ##    sd.of.means      : the standard deviation of the estimates. ##  ## Detection Function Values ## ~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ##  mean.observed.Pa : mean proportion of individuals/clusters observed in ##                     the covered region. ##  mean.estimte.Pa  : mean estimate of the proportion of individuals/ ##                     clusters observed in the covered region. ##  sd.estimate.Pa   : standard deviation of the mean estimates of the ##                     proportion of individuals/clusters observed in the ##                     covered region. ##  mean.ESW         : mean estimated strip width. ##  sd.ESW           : standard deviation of the mean estimated strip widths. ##  ##  ## Region:  study area ## No. Repetitions:  999 ## No. Excluded Repetitions:  0 ## Using only repetitions where all models converged. ##  ## Design:  Systematic parallel line design ##    design.type :  Systematic parallel line design ##    bounding.shape :  rectangle ##    spacing :  1000 ##    design.angle :  0 ##    edge.protocol :  minus ##  ## Population Detectability Summary: ##     key.function  =  hn ##     scale.param  =  200 ##     truncation  =  1000 ##  ## Analysis Summary: ##    Candidate Models: ##       Model 1: key function 'hn', formula '~1', was selected 798 time(s). ##       Model 2: key function 'hr', formula '~1', was selected 201 time(s). ##    criteria  =  AIC ##    variance.estimator  =  R2 ##    truncation  =  600 ##  ## Summary for Individuals ##  ## Summary Statistics ##  ##   mean.Cover.Area mean.Effort   mean.n mean.k      mean.ER   mean.se.ER ## 1         1.2e+08       1e+05 99.11311     20 0.0009911311 9.838211e-05 ##     sd.mean.ER ## 1 7.436991e-05 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Abundance (N) ##  ##   Truth mean.Estimate percent.bias  RMSE CI.coverage.prob mean.se sd.of.means ## 1   200        198.33        -0.84 26.17             0.94   25.36       26.13 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Density (D) ##  ##   Truth mean.Estimate percent.bias         RMSE CI.coverage.prob      mean.se ## 1 2e-06  1.983281e-06   -0.8359462 2.617061e-07        0.9379379 2.535869e-07 ##    sd.of.means ## 1 2.613023e-07 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Detection Function Values ##  ##   mean.observed.Pa mean.estimate.Pa sd.estimate.Pa mean.ESW sd.ESW ## 1             0.42             0.42           0.05   252.75  27.29"},{"path":"/articles/dsims-examples.html","id":"running-multiple-simulations-to-investigate-truncation","dir":"Articles","previous_headings":"","what":"Running Multiple Simulations to investigate Truncation","title":"Transition from `DSsim` to `dsims`","text":"investigate effects varying truncation distance analysis simply need run one simulation, one truncation distance. following code shows iterated number different truncation distances stored simulation results simulation summaries lists. first set simulations detectability change individual level covariates. now move investigate happens sex covariate affects detectability. First, need select suitable candidate truncation distances; plot example data. Figure 12 shows data generated population size 2500, increase population size increase number detections make shape resulting data less variable. histogram five candidate truncation distances selected shown red vertical lines. selected truncation distances represent range values probability detection starting 0.6 shortest truncation distance. Figure 14: Histogram data covariate simulation increased population size 2500. detection function shows best fit data (code allowed select half normal hazard rate based minimum AIC). red lines indicate manually selected candidate truncation distances. can now feed candidate truncation distances covariate simulations way simple half normal simulation store results summaries lists. Note now still fitting half-normal hazard rate intercept models therefore testing pooling robustness. Finally, may also wish fit covariate model used generate data rather non covariate half-normal hazard rate models. allow us investigate effects truncation fact aware “measure” covariate knew affecting detectability.","code":"# Truncation distances to iterate over truncation <- c(200, 400, 600) # Storage space for results results.list <- list() summary.list <- list()  # We will now run the simulation for each of the analysis truncation distances. for(tdist in seq(along= truncation)){   # Screen display to indicate how far through the simulations we are   cat(\"\\n Running for truncation = \", truncation[tdist], fill = T)   # Update analysis with new truncation distance   new.ds.analyses <- make.ds.analysis(dfmodel = list(~1, ~1),                                       key = c(\"hn\", \"hr\"),                                       criteria = \"AIC\",                                       truncation = truncation[tdist])   # Update simulation to include new analysis component   # We can use the @ symbol to change the contents of a slot or alternatively we could have   # re-created the simulation with the new analyses using make.simulation().   sim@ds.analysis <- new.ds.analyses   # Run simulation and store the results in the appropriate list element   results.list[[tdist]] <- run.simulation(sim, run.parallel = TRUE)   # Store simulation summary in another list in the appropriate list element   # As we are storing the summary we do not need the description.summary displayed   summary.list[[tdist]] <- summary(results.list[[tdist]], description.summary = FALSE) }  # Add names to the summary and results list so we know which truncation distance they # relate to names(results.list) <- paste(\"t\", truncation, sep = \"\") names(summary.list) <- paste(\"t\", truncation, sep = \"\") # Truncation distances to iterate over truncation <- c(200, 400, 600, 800, 1000) # Storage space for results cov.results.list <- list() cov.summary.list <- list()  for(tdist in seq(along= truncation)){   # Screen display to indicate how far through the simulations we are   cat(\"\\n Running for truncation = \", truncation[tdist], fill = T)   # Update analysis truncation distance   new.ds.analyses <- make.ds.analysis(dfmodel = list(~1, ~1),                                       key = c(\"hn\", \"hr\"),                                       criteria = \"AIC\",                                       truncation = truncation[tdist])   # Update simulation   sim.cov@ds.analysis <- new.ds.analyses   # Run Simulation   cov.results.list[[tdist]] <- run.simulation(sim.cov, run.parallel = TRUE)   # Store simulation summaries   cov.summary.list[[tdist]] <- summary(cov.results.list[[tdist]], description.summary = FALSE) } # Add names to the summary and results list names(cov.results.list) <- paste(\"t\", truncation, sep = \"\") names(cov.summary.list) <- paste(\"t\", truncation, sep = \"\") # Now include the ddf.analyses.cov in the simulation sim.cov <- make.simulation(reps = 999,                             design = design,                            population.description = pop.desc.cov,                            detectability = detect.cov,                            ds.analysis = ddf.analyses.cov)  # Truncation distances to iterate over truncation <- c(200, 400, 600, 800, 1000)  # Storage space for results covmod.results.list <- list() covmod.summary.list <- list()  for(tdist in seq(along= truncation)){   # Screen display to indicate how far through the simulations we are   cat(\"\\n Running for truncation = \", truncation[tdist], fill = T)   # Update analysis truncation distance so that detecability is now modelled as a function of sex   new.ds.analyses <- make.ds.analysis(dfmodel = list(~sex),                                       key = c(\"hn\"),                                       truncation = truncation[tdist])   # Update simulation   sim.cov@ds.analysis <- new.ds.analyses   # Run Simulation   covmod.results.list[[tdist]] <- run.simulation(sim.cov, run.parallel = TRUE)   # Store simulation summaries   covmod.summary.list[[tdist]] <- summary(covmod.results.list[[tdist]], description.summary = FALSE) } # Add names to the summary and results list names(covmod.results.list) <- paste(\"t\", truncation, sep = \"\") names(covmod.summary.list) <- paste(\"t\", truncation, sep = \"\")"},{"path":"/articles/dsims-examples.html","id":"running-simulations-to-check-detection-function-parameter-estimates","dir":"Articles","previous_headings":"","what":"Running Simulations to Check Detection Function Parameter Estimates","title":"Transition from `DSsim` to `dsims`","text":"simulations concentrate question accurately precisely can estimate abundance density population. However, may also interested learning individual level covariates affect detectability. require different slightly advanced setup. dsims currently store detection function parameter estimates therefore need manually, however dsims provide functionality fairly straight forward. create simulation need get dsims give us survey data can run analyses obtain parameter estimates. Please note extraction parameter estimates ddf model specific model, adapting code need check ddf documentation mrds understand parameters different models.","code":"sim.cov <- make.simulation(reps = 999,                         design = design,                        population.description = pop.desc.cov,                        detectability = detect.cov,                        ds.analysis = ddf.analyses.cov)  # Truncation distances to iterate over truncation <- c(200, 400, 600, 800, 1000) reps <- sim.cov@reps  # To store values of interest sigma.est <- male.param <- array(NA,                                   dim = c(length(truncation), reps),                                   dimnames = list(truncation, 1:reps))  # Iterate over truncation distances for(tdist in 2:5){#seq(along = truncation)){   # Screen display to indicate how far through the simulations we are   cat(\"\\n Running for truncation = \", truncation[tdist], fill = T)   # Update truncation distance   new.ds.analyses <- make.ds.analysis(dfmodel = list(~sex),                                       key = c(\"hn\"),                                       truncation = truncation[tdist])   # Update simulation   sim.cov@ds.analysis <- new.ds.analyses   # Simulation repetitions   for(i in 1:reps){     cat(\"\\r\", i, \" out of \", reps,  \" reps \\r\")     # Simulates the survey process      simulated.data <- run.survey(sim.cov)     # Run analyses      results <- analyse.data(new.ds.analyses, simulated.data)     # Obtain detection function model     ddf.results <- results$ddf     # Store values of interest     try(sigma.est[tdist,i] <- ddf.results$par[1])     try(male.param[tdist,i] <- ddf.results$par[2])   } }"},{"path":"/articles/dsims-examples.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Transition from `DSsim` to `dsims`","text":"simulations take substantial amount time run saved results summaries; can downloaded dsims_truncation_results.zip. Running one simulations 999 repetitions one truncation distance takes 11 minutes i7-2600K 3.40GHz processor running parallel across 7 threads. running parallel maximum number cores (threads) permitted one less number machine, default number used unless max.cores specifies lower number. downloaded unzipped sub folder called results results summaries can loaded follows: objects loaded workspace include results.list, summary.list, cov.results.list, cov.summary.list, covmod.results.list, covmod.summary.list, sigma_est male_param. results.list list 3 simulation objects simple half normal simulations truncation distances 200, 400 600. summary.list list 3 simulation summaries associated simulations results.list. cov.results.list list 5 simulation objects covariate simulations detectability affected sex sex included covariate detection function models. simulations relate truncation distances 200, 400, 600, 800 1000. cov.summary.list list 5 simulation summaries associated simulations cov.results.list. covmod.results.list list 5 simulation objects covariate simulations detectability affected sex analyses including covariate sex detection function model. simulations relate truncation distances 200, 400, 600, 800 1000. covmod.summary.list list 5 simulation summaries associated simulations covmod.results.list. sigma_est male_param contains parameter estimates simulation set covmod.summary.list. sigma_est 2D array containing parameter estimates sigma five truncation distances male_param contains parameter estimates male sex parameter truncation distance.","code":"# Running simulations in parallel run.simulation(sim.cov, run.parallel = TRUE, max.cores = 7) # Simulations using a simple half normal detection function load(\"results/results_list.ROBJ\") load(\"results/summary_list.ROBJ\")  # Covartiate simulations load(\"results/results_cov_list.ROBJ\") load(\"results/summary_cov_list.ROBJ\")  # Covariate simulations with covariate model load(\"results/covmod_results_list.ROBJ\") load(\"results/covmod_summary_list.ROBJ\") load(\"results/sigma_est.ROBJ\") load(\"results/male_param.ROBJ\") # To view the full summary for the simple half normal simulation with a truncation distance of 200: summary.list$t200  # To view the full summary for the covariate simulation with a truncation distance of 600: cov.summary.list$t600"},{"path":"/articles/dsims-examples.html","id":"extracting-result-statistics","dir":"Articles","previous_headings":"Results","what":"Extracting Result Statistics","title":"Transition from `DSsim` to `dsims`","text":"investigate truncation distance affects results need produce tables comparison. section details can done using knitr. section provided interested users can just skip next section results tables actually presented. code applicable study regions one strata, need modified deal multiple strata.","code":"library(knitr)  N    <- unlist(lapply(summary.list, function(x){x@individuals$N$mean.Estimate})) n    <- unlist(lapply(summary.list, function(x){x@individuals$summary$mean.n})) se   <- unlist(lapply(summary.list, function(x){x@individuals$N$mean.se})) sd.N <- unlist(lapply(summary.list, function(x){x@individuals$N$sd.of.means})) bias <- unlist(lapply(summary.list, function(x){x@individuals$N$percent.bias})) RMSE <- unlist(lapply(summary.list, function(x){x@individuals$N$RMSE})) cov  <- unlist(lapply(summary.list, function(x){x@individuals$N$CI.coverage.prob}))  sim.data <- data.frame(trunc = c(200,400,600),                         n = round(n),                        N = round(N),                        se = round(se,2),                        sd.N = round(sd.N,2),                        bias = round(bias,2),                        RMSE = round(RMSE,2),                        cov = round(cov*100,1))  kable(sim.data,        col.names = c(\"$Truncation$\", \"$mean\\\\ n$\", \"$mean\\\\ \\\\hat{N}$\", \"$mean\\\\ se$\", \"$SD(\\\\hat{N})$\", \"$\\\\% Bias$\", \"$RMSE$\", \"$\\\\%\\\\ CI\\\\ Coverage$\"),       row.names = FALSE,       align = c('c', 'c', 'c', 'c', 'c', 'c', 'c', 'c'),       caption = \"Simulation Results for the simple half normal detection probability: The truncation distance, mean number of detections, mean estimated population size (N), mean standard error of $\\\\hat{N}$, the standard deviation of $\\\\hat{N}$, percentage bias, root mean squared error, percentage of times the true value of N was captured in the confidence intervals.\",       table.placement=\"!h\",       format = \"html\")"},{"path":[]},{"path":"/articles/dsims-examples.html","id":"simple-half-normal-simulations","dir":"Articles","previous_headings":"Simulation Results","what":"Simple Half-Normal Simulations","title":"Transition from `DSsim` to `dsims`","text":"simulations data generated based single half-normal detection function truncation distance used analysis stage made little difference estimates abundance. perhaps small decrease coverage 95% confidence intervals truncation distance increased. truncation distance 400 600 didn’t quite capture truth 95% time, Table 1. root mean squared error (RMSE) values suggested away transect distances truncated closer abundance estimates truth, although bias appeared minimal three scenarios. Precision looked improve larger truncation distances. Table 1: Simulation Results simple half normal detection probability. truncation distance, mean number detections, mean estimated population size (N), mean standard error \\(\\hat{N}\\), standard deviation \\(\\hat{N}\\), percentage bias, root mean squared error, percentage times true value N captured 95% confidence intervals.","code":""},{"path":"/articles/dsims-examples.html","id":"covariate-simulation-testing-pooling-robustness","dir":"Articles","previous_headings":"Simulation Results","what":"Covariate Simulation Testing Pooling Robustness","title":"Transition from `DSsim` to `dsims`","text":"simulations test whether can rely assumption pooling robustness situation. deliberately provided model used generate data candidate model analysis stage. can see setup, pooled two quite distinct detection functions, bias abundance estimates truncation distance larger, Table 2. results also show 95% confidence intervals capture true abundance substantially less 95% time use large truncation distances. underestimation variability, Table 2 shows large truncation values mean se (mean estimated standard errors) lower standard deviation estimates abundance. analyses correctly estimating variability expected values similar. addition, RMSE suggests larger truncation distance away truth abundance estimates become, significant jump 800 1000m. Table 2: Simulation Results covariate detection probability, detectability affected sex candidate models (half-normal hazard rate) contain covariates. truncation distance, mean number detections, mean estimated population size (N), mean standard error \\(\\hat{N}\\), standard deviation \\(\\hat{N}\\), percentage bias, root mean squared error, percentage times true value N captured 95% confidence intervals.","code":""},{"path":"/articles/dsims-examples.html","id":"covariate-simulation-with-covariate-model","dir":"Articles","previous_headings":"Simulation Results","what":"Covariate Simulation with Covariate Model","title":"Transition from `DSsim` to `dsims`","text":"Finally ran simulations fitted model used generate data. simulations truncation distance little influence accuracy estimates abundance, exception small amount bias smallest truncation distance, Table 3. RMSE values suggest larger truncation distances better job estimating abundance significant improvement coming step 200m truncation 400m truncation. 95% confidence intervals captured true abundance least 95% time truncation distances. simulations, variability always estimated mean estimated standard errors always higher standard deviation estimates. estimates abundance greatly affected truncation distance simulations, said parameter estimates. Figure 15, suggests parameter estimation accurate reliable maximum truncation distance. unstable parameter estimates smallest truncation distance leading sometimes large estimates sigma bimodal distribution sex.male explain slight bias abundance estimates truncation distance seen Table 2. hoped practise strange behaviour might associated poor fit data identified estimates rejected based extensive model selection criteria. Table 3: Simulation Results covariate detection probability, detectability affected sex modelled detection function. truncation distance, mean number detections, mean estimated population size (N), mean standard error \\(\\hat{N}\\), standard deviation \\(\\hat{N}\\), percentage bias, root mean squared error, percentage times true value N captured 95% confidence intervals. Figure 15: Histograms parameter estimates sigma sex.male three five truncation distances investigated. Red lines indicate truth.","code":""},{"path":"/articles/dsims-examples.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Transition from `DSsim` to `dsims`","text":"simulations pushed concept pooling robustness limit two detection functions males females distinct one another. increased potential spiked data simulations, number detections falls away quickly small distances can make fitting detection function unreliable (fact numerous warnings running simulations scenario). recommendation performing distance sampling surveys review data frequently field collected. detect spiked data field methods adapted achieve wider shoulder detection function. practise help ensure pooling robustness holds. model selection () applied simulations done purely basis AIC. practise AIC value one number diagnostic techniques researchers rely select appropriate detection function model. likely, especially due potential spiked data, models simulations good fits data selected researcher. model selection manual researcher may chosen include adjustment terms half-normal hazard rate models may improved model fit associated estimates abundance relying pooling robustness. simulations suggest small cost precision researcher truncating data. fact, truncation may beneficial large differences underlying detection functions due covariate included detection function models. suspect multiple detection functions pooled together tails observed combined detection function represent detection functions already dropped extremely low probabilities detection closer transect. general rule distance sampling shape detection function close transect importance going tail. indeed detections made large distances, included, can undesired large influence detection function parameters. generally accepted rule thumb truncate data probability detection around 0.15. Conversely, researcher hopes identify covariates affect detectability obtain reliable parameter estimates minimal () truncation appears preferable. effects truncation distance estimated abundance precision interesting, especially comparison estimated observed variability. allow simulations fit half-normal hazard rate models detectability affected sex covariate, truncation distance increases estimated variability (mean se) stays roughly observed variability \\((SD(\\hat{N}))\\) increases. larger truncation distances variability estimated abundance underestimated confidence interval coverage low. However, fitting covariate model estimated variance higher observed variance suggesting model estimating variability truncation distances confidence interval coverage high.","code":""},{"path":"/articles/dsims-examples.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Transition from `DSsim` to `dsims`","text":"Truncation can help ensure concept pooling robustness holds differences detection functions individuals population covariates affecting detectability modelled. estimates abundance accurate precise covariate affecting detectability included detection function model. Larger truncation distances truncation preferable trying accurately obtain parameters covariates affect detectability.","code":""},{"path":[]},{"path":"/articles/dsims_grouped_strata.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Grouping strata during simulation","text":"Ensure administrator privileges computer install necessary R packages.","code":""},{"path":"/articles/dsims_grouped_strata.html","id":"running-the-simulation-and-viewing-the-results-for-yourself","dir":"Articles","previous_headings":"Getting started","what":"Running the simulation and viewing the results for yourself","title":"Grouping strata during simulation","text":"advisable download .Rmd file like replicate simulations . addition, results simulations provided allow compile .Rmd document. results included zip archive results.zip. Uncompressing contents folder called results within folder .Rmd file give required structure run code .Rmd file. end file sim.results.ROBJ within results folder.","code":""},{"path":[]},{"path":"/articles/dsims_grouped_strata.html","id":"creating-a-region-object","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Creating a region object","title":"Grouping strata during simulation","text":"First, create region object using shapefile stored within package directory. shapefile provided contains marine study area coast Ireland. region already projected metres dssd detect shapefile .prj file. study region also divided six strata provide names code identify (“North”, “NW”, “West Upper”, “West Lower”, “SW”, “South”). Care taken check order strata expected checking plot study region. division study area six strata design purposes, allows us specify design angles stratum individually. However, analysis purposes interested estimates two distinct areas study region, consist three northern strata grouped together three southern strata grouped together.","code":"# Find the full file path to the shapefile on the users machine shapefile.path <- system.file(\"extdata\", \"AreaRProjStrata.shp\", package = \"dssd\")  # Create the region object region <- make.region(region.name = \"study area\", strata.name = c(\"North\", \"NW\",     \"West Upper\", \"West Lower\", \"SW\", \"South\"), shape = shapefile.path)  # Plot the survey region plot(region)"},{"path":"/articles/dsims_grouped_strata.html","id":"creating-a-design-object","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Creating a design object","title":"Grouping strata during simulation","text":"mentioned , two sub regions interest study area, like estimates density / abundance (northern three strata southern three strata). Let’s start constructing design though divided study region two strata. expect animals southern strata implement non-uniform coverage design allocating effort per unit area (.e. higher coverage) strata northern strata. Let’s assume effort calculations suggested sufficient resources survey parallel lines spacing 16,000m northern strata spacing 8,000m southern strata. Note shapefile units metres, simulation measurements must also provided metres. supply single design angle three northern strata one three southern strata, let’s set 135 70 degrees, respectively. also specify minus sampling expect observe animals beyond 1,500m. generate set transects design assess desirable design qualities.  optimal design aim maximise number samplers (many short lines better fewer long lines) place parallel density gradients. case long thin study region , want lay transects across short dimension region (.e. perpendicular coast). also often case marine species distributed relation coast (usually particular depth preference) laying transects perpendicular coast align parallel density gradient thereby reduce variability encounter rate transects resulting precise estimates. can see first design, given complexity region, choosing single design angle northern southern groups strata going achieve goal. particularly problematic southern strata selecting design angle give lines perpendicular coast one area gives lines parallel coast another. now make use fact six strata select appropriate design angles aim orientating transects perpendicular coast.  can see image dividing northern southern regions interest substrata allows us better orientate lines maximise number samplers place perpendicular coast. stratification purely design purposes (modify design angle moved along coast) still treat three substrata one come analyse data. However, important note can kept uniform coverage across substrata. However, design allow us simply group 6 strata analysis stage. northern strata lower coverage southern strata full dataset representative southern strata northern must therefore ensure differences detectability modelled.","code":"# Define a design based on only two strata design <- make.design(region = region, transect.type = \"line\", design = \"systematic\",     spacing = c(rep(16000, 3), rep(8000, 3)), design.angle = c(135, 135, 135, 70,         70, 70), edge.protocol = \"minus\", truncation = 1500)  # Generate and plot a single set of transects survey <- generate.transects(design) plot(region, survey) # Define the design design <- make.design(region = region, transect.type = \"line\", design = \"systematic\",     spacing = c(rep(16000, 3), rep(8000, 3)), design.angle = c(160, 135, 80, 135,         50, 150), edge.protocol = \"minus\", truncation = 1500)   # Create a single set of transects to check survey <- generate.transects(design) plot(region, survey)"},{"path":"/articles/dsims_grouped_strata.html","id":"creating-a-density-object","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Creating a density object","title":"Grouping strata during simulation","text":"create density surface represent distribution animals abundant south also prefers coastal waters. order get idea place hostpots can first check range coordinates projected scale. Note plot region gives scale lat lon despite region projected. can access information requesting bounding box sf object stored within dssd region. can now create density grid spacing 2,500m dimensions add two hotspots simulate potentially realistic distribution animals prefer stick closely coast. Adding hotspots largely done trial error know range x-y coordinate values. measurement values must provided metres. later use fixed population size simulations, need worry exact values provide density grid relate one another. example, area density cell value twice another density cell , average, end twice many animals population generated.","code":"# Get the bounding box of the sf object within the region sf::st_bbox(region@region) # Make a density grid with values of 1 across the region my.density <- make.density(region = region, x.space = 2500, y.space = 2500, constant = 1)  # Add a hotspot at coordinates (0, 1900000) my.density <- add.hotspot(my.density, centre = c(0, 1900000), sigma = 70000, amplitude = 10)  # Add a hotspot at coordinates (80000, 210000) my.density <- add.hotspot(my.density, centre = c(80000, 2100000), sigma = 1e+05,     amplitude = 5)  # Plot this example density surface plot(my.density, region)"},{"path":"/articles/dsims_grouped_strata.html","id":"population-size","dir":"Articles","previous_headings":"Creating a grouped strata simulation > Creating a density object","what":"Population size","title":"Grouping strata during simulation","text":"base simulation total population size 2,500 animals. make.population command requires us specify many individuals per stratum, calculate using density summary. can see table used exact densities density grid generate lot animals (see ave.N column)! However, mentioned , simulation use density surface guide relative density across region. Therefore, use value decide many animals allocate strata scaling . point, also create individual level covariate indicate whether animals northern group strata southern group strata. enable us later model differences detectability northern southern sub populations. Ignoring differences lead bias estimates abundance northern southern strata also total estimates due non-uniform coverage design. now include information population description set fixed population size argument true.","code":"# View the density summary summary(my.density) ##       strata             area       ave.N    ave.D ## 1      North 4176461143 [m^2]  8731625315 2.090676 ## 2         NW 8180996497 [m^2] 25656220203 3.136075 ## 3 West Upper 6316380968 [m^2] 17438152704 2.760782 ## 4 West Lower 8188111047 [m^2] 41315196625 5.045754 ## 5         SW 2654685511 [m^2] 13585880563 5.117699 ## 6      South 9291229356 [m^2] 48534037861 5.223640 # Extract average N values ave.N.vals <- summary(my.density)@summary$ave.N # Scale average N vals to sum to 2500 N.per.stratum <- round(2500 * ave.N.vals/sum(ave.N.vals))  # View the allocation per stratum N.per.stratum ## [1] 141 413 281 665 219 781 # Check the total sums to 2500 (sometimes rounding may cause slight variation) sum(N.per.stratum) ## [1] 2500 # Create the population description covs <- list() # Adds a strata group entry allocating 'North' to all animals in the North, NW # and West Upper strata and allocating 'South' to all animals in the West # Lower, SW and South strata. covs$strata.group <- data.frame(level = c(rep(\"North\", 3), rep(\"South\", 3)), prob = rep(1,     6), strata = c(\"North\", \"NW\", \"West Upper\", \"West Lower\", \"SW\", \"South\")) # Create the population description pop.description <- make.population.description(region = region, density = my.density,     covariates = covs, N = N.per.stratum, fixed.N = TRUE)"},{"path":"/articles/dsims_grouped_strata.html","id":"true-detection-function","dir":"Articles","previous_headings":"Creating a grouped strata simulation > Creating a density object","what":"True detection function","title":"Grouping strata during simulation","text":"simulate using half-normal detection function change \\(\\sigma\\) (scale.param) depending stratum use truncation distance 1500m. changing detection functions across strata can demonstrate pooling robustness applies. Pooling robustness refers property distance sampling allows us obtain unbiased abundance estimates single ‘pooled’ detection function fitted across number sub populations, even detectability may vary greatly, (Rexstad, Buckland, Marshall, & Borchers, 2023). Pooling robustness applies data representative sample across population generating estimates. example, data three northern sub-strata can pooled data three southern sub- strata can pooled coverage . pool detections strata / sub-strata coverage varies (without accounting non-uniform coverage) resulting detection function representative strata higher coverage.","code":"# Create the detectability detect <- make.detectability(key.function = \"hn\", scale.param = c(950, 850, 750,     650, 550, 450), truncation = 1500)  # Plot the detectability plot(detect, pop.description)"},{"path":"/articles/dsims_grouped_strata.html","id":"creating-the-analyses-object","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Creating the analyses object","title":"Grouping strata during simulation","text":"simulation engine currently fits one global detection function simulated dataset. scenario constructed, know pooling robustness apply across study region whole different levels coverage northern southern stratum groups. Given fit separate detection functions, must allow model able vary detection function across two groups strata. achieve can include strata.group covariate (included population description) model, allow different scale parameter estimated northern three strata southern three. Note simply included Region.Label covariate detection function model, however, within simulation stage fitting detection function strata included dataset resulted scale parameter estimated 6 strata individually. analysis stage also need define strata grouped order obtain estimates regions interest. dataframe created code tells simulation group strata. now define analyses. simulating detections range difference detection functions, incorporate model uncertainty allowing simulation select half normal hazard rate model. models include strata.group covariate use AIC criterion model selection.","code":"# Create a dataframe describing how the strata will be grouped group.strata <- data.frame(design.id = c(\"North\", \"NW\", \"West Upper\", \"West Lower\",     \"SW\", \"South\"), analysis.id = c(rep(\"North\", 3), rep(\"South\", 3)))  # View the dataframe print(group.strata) ##    design.id analysis.id ## 1      North       North ## 2         NW       North ## 3 West Upper       North ## 4 West Lower       South ## 5         SW       South ## 6      South       South # Define the analyses - both the hn and hr models use the ~strata.group formula ds.analyses <- make.ds.analysis(dfmodel = list(~strata.group, ~strata.group), key = c(\"hn\",     \"hr\"), truncation = 1500, group.strata = group.strata, criteria = \"AIC\")"},{"path":"/articles/dsims_grouped_strata.html","id":"running-the-simulation","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Running the simulation","title":"Grouping strata during simulation","text":"running simulation group components simulation object define number repetitions. example simulate 1000 surveys simulation definition. Note first time run simulation limit number repetitions check everything works expected. useful way check simulation setup generate single example survey, may take moment complete.  previous plots lead believe properly parameterised simulation, time run . run small number repetitions take minute two complete, running 1000 repetitions take considerably longer simulation already run results can loaded instead. loaded simulation results, can view . view full summary use summary(simulation), store simulation summary look specific tables within . Firstly, view summary table. Notice requested results northern southern strata instead six substrata. summary table indicates around 98 detections made average northern strata 275 southern strata. important check sufficient detections strata differences detectability can accurately modelled detection function. Next view table giving abundance estimates. small amount negative bias strata total estimate abundance. However, coverage confidence intervals (0.95) 0.92 southern strata total estimate. Sometimes reduced confidence interval coverage can due variance estimated case mean.se (mean estimated standard error) sd..means (truth - observed standard error estimates) close suggesting variance estimated accurately.","code":"# Create the simulation simulation <- make.simulation(reps = 1000, design = design, population.description = pop.description,     detectability = detect, ds.analysis = ds.analyses) # Simulate the data generation for a single survey eg.survey <- run.survey(simulation)  # Plot the example survey plot(eg.survey, region) # Run the simulation in parallel simulation <- run.simulation(simulation, run.parallel = TRUE) # Load the simulation object which has already been run load(\"files/sim.results.ROBJ\") # Create a summary (silently without the description) sim.summary <- summary(simulation, description.summary = FALSE)  # Display the summary table sim.summary@individuals$summary ##       mean.Cover.Area mean.Effort  mean.n mean.k      mean.ER   mean.se.ER ## North      3498729895     1166243  98.490 27.912 8.445558e-05 9.150347e-06 ## South      7551517574     2517173 274.998 71.931 1.092477e-04 7.244126e-06 ## Total     11050247469     3683416 373.488 99.843 9.731804e-05 5.812492e-06 ##         sd.mean.ER ## North 7.782846e-06 ## South 5.842293e-06 ## Total 4.780433e-06 # Display the table of abundance estimates round(sim.summary@individuals$N, 3) ##       Truth mean.Estimate percent.bias    RMSE CI.coverage.prob mean.se ## North   835       819.344       -1.875 111.016            0.956 115.122 ## South  1665      1604.102       -3.658 145.372            0.924 132.674 ## Total  2500      2423.446       -3.062 193.676            0.915 176.878 ##       sd.of.means ## North     109.962 ## South     132.068 ## Total     177.993"},{"path":"/articles/dsims_grouped_strata.html","id":"discussion","dir":"Articles","previous_headings":"Creating a grouped strata simulation","what":"Discussion","title":"Grouping strata during simulation","text":"Even though detectability animals varied across six sub-strata, estimates northern southern groups sub-strata combined low bias. result due pooling robustness applying across groups sub strata (coverage group). Meanwhile, difference detectability northern southern groups modelled explicitly using strata.group covariate models. simulation repeated, covariate omitted, expect see bias abundance estimated northern southern regions well overall estimate. due differences coverage three northen sub-strata three southern sub-strata fitted detection function representative southern region (due higher coverage) northern region. setup analysis simulation little complex due restrictions simulation package (.e. needing include stratum covariate population description). analysing distance sampling data field, similar scenario, able either fit separate detection functions data different regions interest create kind stratum variable want, giving analysis options.","code":""},{"path":[]},{"path":"/articles/GettingStarted.html","id":"distance-sampling-simulations","dir":"Articles","previous_headings":"","what":"Distance Sampling Simulations","title":"Getting Started with dsims","text":"vignette introduces basic procedure setting running distance sampling simulation using ‘dsims’ (Laura Marshall 2023a). ‘dsims’ package uses distance sampling survey design package ‘dssd’ (Laura Marshall 2023b) define design generate surveys (sets transects). details defining designs please refer ‘dssd’ vignettes. ‘dsims’ designed largely similar ‘DSsim’ package (L. Marshall 2020) terms work flow, functions arguments. main differences terms use lie definition designs can now generated R using ‘dssd’ package (packages automatically linked) definition analyses. Analyses now defined using terminology based ‘Distance’ package (Miller et al. 2019). addition, underlying functionality now makes use ‘sf’ package (Pebesma Baston 2021). Distance Sampling techniques provide design based estimates density abundance populations. accuracy estimates relies valid survey design. general rules thumb can help guide design choices, simulations emulating specific set survey characteristics can often help us achieve efficient robust designs individual studies. example, simulations can help us investigate effort allocation can affect estimates effects efficient design less uniform coverage probability. Due individual nature study, specific set characteristics, simulation can powerful tool evaluating survey design.","code":""},{"path":"/articles/GettingStarted.html","id":"setting-up-the-region","dir":"Articles","previous_headings":"","what":"Setting up the Region","title":"Getting Started with dsims","text":"use St Andrews bay area example study region simulations. single strata study region projected metres. first load ‘dsims’ package, also automatically load ‘dssd’ package. shapefile projection recorded (associated .prj file) tell ‘dsims’ units metres. Figure 1: study region.","code":"library(dsims) ## Loading required package: dssd # Find the file path to the example shapefile in dssd shapefile.name <- system.file(\"extdata\", \"StAndrew.shp\", package = \"dssd\") # Create the survey region object region <- make.region(region.name = \"St Andrews bay\",                       shape = shapefile.name,                       units = \"m\") plot(region)"},{"path":"/articles/GettingStarted.html","id":"defining-the-study-population","dir":"Articles","previous_headings":"","what":"Defining the study population","title":"Getting Started with dsims","text":"define study population require number intermediate steps. describe turn .","code":""},{"path":"/articles/GettingStarted.html","id":"population-density-grid","dir":"Articles","previous_headings":"Defining the study population","what":"Population Density Grid","title":"Getting Started with dsims","text":"first step defining study population set density grid. One way first create flat surface add hot low spots represent think might areas higher lower density animals. assume 300 groups St Andrews bay study area (fairly large number!) give us average density 3.04-07 groups per square metre. simulation, use fixed population size, need worry absolute values density surface. Instead, can simpler work larger values aware defining relative density surface. create surface density twice another area relationship maintained (much smaller absolute values) later generate population. purposes simulation likely want test range plausible animal distributions (knew exactly many going find given location probably wouldn’t study!). testing non-uniform coverage designs advisable try worst case scenarios, .e. set density area higher lower coverage differ majority survey region. give idea degree potential bias introduced. example, equal spaced zigzag design, generated convex hull areas differing coverage likely top bottom survey region. density grid areas shown lower animal density rest survey region, likely scenario study region constructed order catch range population interest. Figure 2: density map representing plausible distributions animals within study region. situations may need rely constructing density distribution scratch. Now demonstrate use gam construct density surface. data area use density grid created example dataset. fit gam data use create new density object. need restrict predicted values greater zero, use log link Gaussian error distribution. can also useful trick want turn something created using method, can look bit lumpy bumpy, smoother distribution surface. gam fitted must use smooth x y fit model predictor covariates present density surface. Figure 3: density map representing plausible distributions animals within study region.","code":"# We first create a flat density grid density <- make.density(region = region,                         x.space = 500,                         constant = 1)  # Now we can add some high and low points to give some spatial variability density <- add.hotspot(object = density,                        centre = c(-170000, 6255000),                        sigma = 8000,                        amplitude = 4)  density <- add.hotspot(object = density,                        centre = c(-160000, 6275000),                        sigma = 6000,                        amplitude = 4)  density <- add.hotspot(object = density,                        centre = c(-155000, 6260000),                        sigma = 3000,                        amplitude = 2)  density <- add.hotspot(object = density,                        centre = c(-150000, 6240000),                        sigma = 10000,                        amplitude = -0.9)  density <- add.hotspot(object = density,                        centre = c(-155000, 6285000),                        sigma = 10000,                        amplitude = -1)  # I will choose to plot in km rather than m (scale = 0.001) plot(density, region, scale = 0.001) # First extract the data above - this is simple in this case as we only have a single strata # Multi-strata regions will involve combining the density grids for each strata into a  # single dataset. density.data <- density@density.surface[[1]] head(density.data) ## Simple feature collection with 6 features and 4 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -157572.4 ymin: 6241463 xmax: -154890.4 ymax: 6241543 ## CRS:           NA ##            strata   density         x       y                       geometry ## 34 St Andrews bay 0.6128054 -157640.4 6241293 POLYGON ((-157390.4 6241543... ## 35 St Andrews bay 0.5614958 -157140.4 6241293 POLYGON ((-157390.4 6241543... ## 36 St Andrews bay 0.5125986 -156640.4 6241293 POLYGON ((-156890.4 6241543... ## 37 St Andrews bay 0.4662975 -156140.4 6241293 POLYGON ((-156390.4 6241543... ## 38 St Andrews bay 0.4227525 -155640.4 6241293 POLYGON ((-155890.4 6241543... ## 39 St Andrews bay 0.3821010 -155140.4 6241293 POLYGON ((-155390.4 6241543... # Fit a simple gam to the data library(mgcv) ## Loading required package: nlme ## This is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'. fit.gam <- gam(density ~ s(x,y), data = density.data, family = gaussian(link=\"log\"))  # Use the gam object to create a density object gam.density <- make.density(region = region,                             x.space = 500,                             fitted.model = fit.gam)  plot(gam.density, region, scale = 0.001)"},{"path":"/articles/GettingStarted.html","id":"other-population-parameters","dir":"Articles","previous_headings":"Defining the study population","what":"Other Population Parameters","title":"Getting Started with dsims","text":"created plausible animal density distribution can go define population parameters. constructing population description. assume animals occur small clusters first create covariate list define distribution cluster size (must named “size”) zero-truncated Poisson distribution mean equal 3. familiar ‘DSsim’ please note simplified format defining population covariates. population value define population size. clusters population, N refer number clusters rather individuals. set number clusters 100. leave fixed.N argument default TRUE say like generate population based population size rather density surface.","code":"# Create a covariate list describing the distribution of cluster sizes covariates <- list(size = list(distribution = \"ztruncpois\", mean = 3))  # Define the population description pop.desc <- make.population.description(region = region,                                         density = gam.density,                                         covariates = covariates,                                         N = 300,                                         fixed.N = TRUE)"},{"path":"/articles/GettingStarted.html","id":"coverage-grid","dir":"Articles","previous_headings":"","what":"Coverage Grid","title":"Getting Started with dsims","text":"good practice create coverage grid study area assess coverage probability varies spatially across study area specified designs. designs may non-uniform coverage, advise coverage probability assessed prior running simulations. However, step essential running simulations omit refer ‘dssd’ vignettes details.","code":""},{"path":"/articles/GettingStarted.html","id":"defining-the-design","dir":"Articles","previous_headings":"","what":"Defining the Design","title":"Getting Started with dsims","text":"‘dsims’ working together ‘dssd’ provides number point line transect designs. details defining designs can found ‘dssd’ help vignettes. also provide examples online https://distancedevelopment.github.io/distancesamplingcom2/resources/vignettes.html . simulations compare two line transect designs, systematically spaced parallel lines equal spaced zigzag lines. zigzag design generated within convex hull try minimise -effort transit time ends transects. design angles design selected transects run roughly perpendicular coast. way two designs defined means 90 degrees parallel line design 0 zigzag design. designs assumed minus sampling protocol truncation distance set 750m transect. spacings design selected give trackline lengths around 450 km (assessed running coverage simulations designs using ‘run.coverage’, see help ‘dssd’). trackline lengths can thought indicator cost survey give total travel time (effort) beginning first transect end last transect.","code":"parallel.design <- make.design(region = region,                                 design = \"systematic\",                                spacing = 2500,                                edge.protocol = \"minus\",                                design.angle = 90,                                truncation = 750)  zigzag.design <- make.design(region = region,                               design = \"eszigzag\",                              spacing = 2233,                              edge.protocol = \"minus\",                              design.angle = 0,                              bounding.shape = \"convex.hull\",                              truncation = 750)"},{"path":"/articles/GettingStarted.html","id":"generating-a-set-of-transects","dir":"Articles","previous_headings":"Defining the Design","what":"Generating a Set of Transects","title":"Getting Started with dsims","text":"always good idea run quick check design expected generating set transects plotting . Figure 4: example set transects generated systematic parallel line design plotted within study region. Figure 5: example set transects generated systematic parallel line design plotted within study region.","code":"p.survey <- generate.transects(parallel.design) plot(region, p.survey) z.survey <- generate.transects(zigzag.design) plot(region, z.survey)"},{"path":"/articles/GettingStarted.html","id":"defining-detectability","dir":"Articles","previous_headings":"","what":"Defining Detectability","title":"Getting Started with dsims","text":"defined population interest design use survey population now need provide information detectable individuals clusters . example assume larger clusters detectable. Take care defining covariate parameters covariate names match population description. setting basic scale parameter along side covariate parameters values need aware covariate parameter values incorporated. covariate parameter values provided adjust value scale parameter log scale. scale parameter individual (\\(\\sigma_j\\)) can calculated : \\[\\sigma_j = exp(log(\\sigma_0)+\\sum_{=1}^{k}\\beta_ix_{ij})\\] \\(j\\) individual, \\(\\sigma_0\\) base line scale parameter (passed argument ‘scale.param’ natural scale), \\(\\beta_i\\)’s covariate parameters passed log scale covariate \\(\\) \\(x_{ij}\\) values covariate values covariate \\(\\) individual \\(j\\). assume half normal detection function scale parameter 300. set truncation distance design 750 m. set covariate slope coefficient log scale log(1.08) = 0.077. can check detection functions look like different covariate values plotting . plot example detection functions need provide population description well detectability. Figure 6: Plot detection function mean group size (solid line) 2.5 97.5 percentile values group size (dashed lines) population. can also calculate average detection function mean cluster size 3 defined population description: \\[\\sigma_{size = 3} = exp(log(300)+log(1.05)*3) = 347.3 \\]","code":"# Define the covariate parameters on the log scale cov.param <- list(size = log(1.08))  # Create the detectability description detect <- make.detectability(key.function = \"hn\",                              scale.param = 300,                              cov.param = cov.param,                              truncation = 750)  # Plot the simulation detection functions plot(detect, pop.desc)"},{"path":"/articles/GettingStarted.html","id":"defining-analyses","dir":"Articles","previous_headings":"","what":"Defining Analyses","title":"Getting Started with dsims","text":"final component simulation analysis set analyses wish fit simulated data. define number models allow automatic model selection based minimum AIC value. models included half-normal covariates, hazard rate covariates half-normal cluster size covariate. leave truncation value 750 previously defined (must \\(\\le\\) truncation values used previously). use default error variance estimator “R2”. See ?mrds::varn descriptions various empirical variance estimators encounter rate.","code":"analyses <- make.ds.analysis(dfmodel = list(~1, ~1, ~size),                              key = c(\"hn\", \"hr\", \"hn\"),                              truncation = 750,                              er.var = \"R2\",                              criteria = \"AIC\")"},{"path":"/articles/GettingStarted.html","id":"putting-the-simulation-together","dir":"Articles","previous_headings":"","what":"Putting the Simulation Together","title":"Getting Started with dsims","text":"Now simulation components defined can create simulation objects. create one systematic parallel line design one equal spaced zigzag design. created simulation recommend check see simulated survey might look like. Figure 7: Example survey systematic parallel design. Panels showing: top left - transects, top right - population, bottom left - transects, population survey detections (cyan dots), bottom right - histogram detection distances Figure 8: Example survey equal spaced zigzag design. Panels showing: top left - transects, top right - population, bottom left - transects, population survey detections (cyan dots), bottom right - histogram detection distances","code":"sim.parallel <- make.simulation(reps = 999,                                 design = parallel.design,                                 population.description = pop.desc,                                 detectability = detect,                                 ds.analysis = analyses)  sim.zigzag <- make.simulation(reps = 999,                               design = zigzag.design,                               population.description = pop.desc,                               detectability = detect,                               ds.analysis = analyses) # Generate a single instance of a survey: a population, set of transects  # and the resulting distance data eg.parallel.survey <- run.survey(sim.parallel)  # Plot it to view a summary plot(eg.parallel.survey, region) # Generate a single instance of a survey: a population, set of transects  # and the resulting distance data eg.zigzag.survey <- run.survey(sim.zigzag)  # Plot it to view a summary plot(eg.zigzag.survey, region)"},{"path":"/articles/GettingStarted.html","id":"running-the-simulation","dir":"Articles","previous_headings":"","what":"Running the Simulation","title":"Getting Started with dsims","text":"simulations can run follows. Note take time run!","code":"# Running the simulations sim.parallel <- run.simulation(sim.parallel) sim.zigzag <- run.simulation(sim.zigzag)"},{"path":"/articles/GettingStarted.html","id":"simulation-results","dir":"Articles","previous_headings":"","what":"Simulation Results","title":"Getting Started with dsims","text":"simulations run can view summary results. Viewing summary simulation first summarise simulation setup simulation run provide summary results. glossary also provided aid interpretation results. Note run produce slightly different results due random component generation populations sets survey transects. Firstly, systematic parallel lines design can see low bias 1.85% estimated abundance/density individuals. bias even lower 0.16% estimated abundance/density clusters. Also can see analyses done good job estimating mean cluster size, 1.72% bias. can also see 95% confidence intervals calculated abundance/density estimates fact capturing true value around 97% time (CI.coverage.prob). can also note observed standard deviation estimates mean bit lower mean se, meaning realising lower variance estimate. often seen systematic designs default variance estimator assumes completely random allocation transect locations, systematic designs usually lower variance. Reassuringly, results expected systematic parallel line design. expect low bias, definition, parallel line designs produce uniform coverage probability. areas design might produce uniform coverage around boundary minor edge effects due minus sampling. can now check results zigzag design. zigzag designs generated inside convex hull can much efficient parallel line designs (less -effort transit) possibility non-uniform coverage. coverage can assessed running run.coverage give much indication likely effects survey results. degree non-uniform coverage may affect survey results determined variability coverage also combines density animals region. Note run one density scenario , non-uniform coverage probability advisable test effects range plausible animal distributions. assumed distribution animals, looks like effects non-uniform coverage going minimal effects estimates abundance / density. individuals bias around 2.5% clusters 0.65%. Similar parallel line design, confidence intervals also giving coverage 97%. can note improved efficiency design increased effort line length corresponding covered area thus giving us bit better precision systematic parallel line design. Histograms estimates abundance simulation replicates can also viewed check possible effects extreme values skewed distributions. Figure 9: Left - histogram estimates abundance clusters systematic parallel design. Right - histogram estimates abundance clusters zigzag design. can see Figure 9 couple high estimates generated >500 parallel line zigzag designs. probably represent data sets difficult fit model (perhaps chance spiked data set). estimates centered around truth occasional high estimates may increased mean value slightly associated small amount positive bias.","code":"summary(sim.parallel) ##  ## GLOSSARY ## -------- ##  ## Summary of Simulation Output ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Region          : the region name. ## No. Repetitions : the number of times the simulation was repeated. ## No. Excluded Repetitions : the number of times the simulation failed ##                   (too few sightings, model fitting failure etc.) ##  ## Summary for Individuals ## ~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Summary Statistics: ##    mean.Cover.Area : mean covered across simulation. ##    mean.Effort     : mean effort across simulation. ##    mean.n          : mean number of observed objects across ##                      simulation. ##    mean.n.miss.dist: mean number of observed objects where no distance ##                     was recorded (only displayed if value > 0). ##    no.zero.n       : number of surveys in simulation where ##                      nothing was detected (only displayed if value > 0). ##    mean.ER         : mean encounter rate across simulation. ##    mean.se.ER      : mean standard error of the encounter rates ##                      across simulation. ##    sd.mean.ER      : standard deviation of the encounter rates ##                      across simulation. ##  ## Estimates of Abundance: ##    Truth            : true population size, (or mean of true ##                       population sizes across simulation for Poisson N. ##    mean.Estimate    : mean estimate of abundance across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates of ##                       abundance ##    sd.of.means      : the standard deviation of the estimates ##  ## Estimates of Density: ##    Truth            : true average density. ##    mean.Estimate    : mean estimate of density across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates. ##    sd.of.means      : the standard deviation of the estimates. ##  ## Detection Function Values ## ~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ##  mean.observed.Pa : mean proportion of individuals/clusters observed in ##                     the covered region. ##  mean.estimte.Pa  : mean estimate of the proportion of individuals/ ##                     clusters observed in the covered region. ##  sd.estimate.Pa   : standard deviation of the mean estimates of the ##                     proportion of individuals/clusters observed in the ##                     covered region. ##  mean.ESW         : mean estimated strip width. ##  sd.ESW           : standard deviation of the mean estimated strip widths. ##  ##  ## Region:  St Andrews bay ## No. Repetitions:  999 ## No. Excluded Repetitions:  0 ## Using only repetitions where all models converged. ##  ## Design:  Systematic parallel line design ##    design.type :  Systematic parallel line design ##    bounding.shape :  rectangle ##    spacing :  2500 ##    design.angle :  90 ##    edge.protocol :  minus ##  ## Individual Level Covariate Summary: ##    size:ztruncpois , mean  =  3 ## Population Detectability Summary: ##     key.function  =  hn ##     scale.param  =  300 ##     truncation  =  750 ##  ## Covariate Detectability Summary (params on log scale): ##    size parameters:  ## Strata St Andrews bay  ##            0.07696104  ##  ## Analysis Summary: ##    Candidate Models: ##       Model 1: key function 'hn', formula '~1', was selected 474 time(s). ##       Model 2: key function 'hr', formula '~1', was selected 201 time(s). ##       Model 3: key function 'hn', formula '~size', was selected 324 time(s). ##    criteria  =  AIC ##    variance.estimator  =  R2 ##    truncation  =  750 ##  ## Summary for Individuals ##  ## Estimates of Abundance (N) ##  ##   Truth mean.Estimate percent.bias   RMSE CI.coverage.prob mean.se sd.of.means ## 1   900        916.67         1.85 149.89             0.97  155.99      149.04 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Density (D) ##  ##          Truth mean.Estimate percent.bias         RMSE CI.coverage.prob ## 1 9.113923e-07  9.282781e-07     1.852743 1.517923e-07         0.968969 ##        mean.se  sd.of.means ## 1 1.579674e-07 1.509258e-07 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Summary for Clusters ##  ## Summary Statistics ##  ##   mean.Cover.Area mean.Effort   mean.n   mean.k      mean.ER   mean.se.ER ## 1       592153913    394769.3 106.7317 15.82883 0.0002704223 3.569565e-05 ##     sd.mean.ER ## 1 2.137828e-05 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Abundance (N) ##  ##   Truth mean.Estimate percent.bias  RMSE CI.coverage.prob mean.se sd.of.means ## 1   300        300.49         0.16 45.02             0.97   49.01       45.04 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Density (D) ##  ##          Truth mean.Estimate percent.bias        RMSE CI.coverage.prob ## 1 3.037974e-07  3.042914e-07    0.1626056 4.55915e-08         0.970971 ##        mean.se  sd.of.means ## 1 4.962823e-08 4.561166e-08 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Expected Cluster Size ##  ##   Truth mean.Expected.S percent.bias mean.se.ExpS sd.mean.ExpS ## 1     3            3.05         1.72         0.16          0.2 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Detection Function Values ##  ##   mean.observed.Pa mean.estimate.Pa sd.estimate.Pa mean.ESW sd.ESW ## 1              0.6              0.6           0.07   451.01  54.08 summary(sim.zigzag) ##  ## GLOSSARY ## -------- ##  ## Summary of Simulation Output ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Region          : the region name. ## No. Repetitions : the number of times the simulation was repeated. ## No. Excluded Repetitions : the number of times the simulation failed ##                   (too few sightings, model fitting failure etc.) ##  ## Summary for Individuals ## ~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Summary Statistics: ##    mean.Cover.Area : mean covered across simulation. ##    mean.Effort     : mean effort across simulation. ##    mean.n          : mean number of observed objects across ##                      simulation. ##    mean.n.miss.dist: mean number of observed objects where no distance ##                     was recorded (only displayed if value > 0). ##    no.zero.n       : number of surveys in simulation where ##                      nothing was detected (only displayed if value > 0). ##    mean.ER         : mean encounter rate across simulation. ##    mean.se.ER      : mean standard error of the encounter rates ##                      across simulation. ##    sd.mean.ER      : standard deviation of the encounter rates ##                      across simulation. ##  ## Estimates of Abundance: ##    Truth            : true population size, (or mean of true ##                       population sizes across simulation for Poisson N. ##    mean.Estimate    : mean estimate of abundance across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates of ##                       abundance ##    sd.of.means      : the standard deviation of the estimates ##  ## Estimates of Density: ##    Truth            : true average density. ##    mean.Estimate    : mean estimate of density across simulation. ##    percent.bias     : the percentage of bias in the estimates. ##    RMSE             : root mean squared error/no. successful reps ##    CI.coverage.prob : proportion of times the 95% confidence interval ##                       contained the true value. ##    mean.se          : the mean standard error of the estimates. ##    sd.of.means      : the standard deviation of the estimates. ##  ## Detection Function Values ## ~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ##  mean.observed.Pa : mean proportion of individuals/clusters observed in ##                     the covered region. ##  mean.estimte.Pa  : mean estimate of the proportion of individuals/ ##                     clusters observed in the covered region. ##  sd.estimate.Pa   : standard deviation of the mean estimates of the ##                     proportion of individuals/clusters observed in the ##                     covered region. ##  mean.ESW         : mean estimated strip width. ##  sd.ESW           : standard deviation of the mean estimated strip widths. ##  ##  ## Region:  St Andrews bay ## No. Repetitions:  999 ## No. Excluded Repetitions:  0 ## Using only repetitions where all models converged. ##  ## Design:  Equal spaced zigzag line design ##    design.type :  Equal spaced zigzag line design ##    bounding.shape :  convex.hull ##    spacing :  2233 ##    design.angle :  0 ##    edge.protocol :  minus ##  ## Individual Level Covariate Summary: ##    size:ztruncpois , mean  =  3 ## Population Detectability Summary: ##     key.function  =  hn ##     scale.param  =  300 ##     truncation  =  750 ##  ## Covariate Detectability Summary (params on log scale): ##    size parameters:  ## Strata St Andrews bay  ##            0.07696104  ##  ## Analysis Summary: ##    Candidate Models: ##       Model 1: key function 'hn', formula '~1', was selected 476 time(s). ##       Model 2: key function 'hr', formula '~1', was selected 178 time(s). ##       Model 3: key function 'hn', formula '~size', was selected 345 time(s). ##    criteria  =  AIC ##    variance.estimator  =  R2 ##    truncation  =  750 ##  ## Summary for Individuals ##  ## Estimates of Abundance (N) ##  ##   Truth mean.Estimate percent.bias   RMSE CI.coverage.prob mean.se sd.of.means ## 1   900        922.42         2.49 134.29             0.97  145.28      132.47 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Density (D) ##  ##          Truth mean.Estimate percent.bias         RMSE CI.coverage.prob ## 1 9.113923e-07  9.340926e-07     2.490729 1.359901e-07         0.971972 ##        mean.se  sd.of.means ## 1 1.471139e-07 1.341493e-07 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Summary for Clusters ##  ## Summary Statistics ##  ##   mean.Cover.Area mean.Effort   mean.n   mean.k      mean.ER   mean.se.ER ## 1       663209990      442140 120.3654 18.47948 0.0002722232 3.346453e-05 ##     sd.mean.ER ## 1 2.143639e-05 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Abundance (N) ##  ##   Truth mean.Estimate percent.bias  RMSE CI.coverage.prob mean.se sd.of.means ## 1   300        301.94         0.65 41.32             0.97   45.58       41.29 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Density (D) ##  ##          Truth mean.Estimate percent.bias        RMSE CI.coverage.prob ## 1 3.037974e-07  3.057631e-07    0.6470286 4.18412e-08         0.973974 ##        mean.se  sd.of.means ## 1 4.616181e-08 4.181593e-08 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Estimates of Expected Cluster Size ##  ##   Truth mean.Expected.S percent.bias mean.se.ExpS sd.mean.ExpS ## 1     3            3.06         1.97         0.15          0.2 ##  ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##  ## Detection Function Values ##  ##   mean.observed.Pa mean.estimate.Pa sd.estimate.Pa mean.ESW sd.ESW ## 1              0.6              0.6           0.07   450.54  49.27 oldparams <- par(mfrow = c(1,2)) histogram.N.ests(sim.parallel) histogram.N.ests(sim.zigzag) par(oldparams)"},{"path":"/articles/GettingStarted.html","id":"simulation-conclusions","dir":"Articles","previous_headings":"","what":"Simulation Conclusions","title":"Getting Started with dsims","text":"simulation assumptions appears zigzag design cost us little accuracy allow us gain precision. noted cost accuracy vary depending distribution animals survey region.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura Marshall. Author, maintainer. Thomas Len. Contributor.  =======","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura Marshall. Author, maintainer. Thomas Len. Contributor. >>>>>>> 27c21928aa011d2896717dce6fa50cb8563a8ac1","code":""},{"path":[]},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marshall L (2024). dsims: Distance Sampling Simulations. <<<<<<< HEAD R package version 1.0.4, https://github.com/DistanceDevelopment/dsims.  ======= R package version 1.0.4, https://github.com/DistanceDevelopment/dsims. >>>>>>> 27c21928aa011d2896717dce6fa50cb8563a8ac1","code":"@Manual{,   title = {dsims: Distance Sampling Simulations},   author = {Laura Marshall},   year = {2024},   note = {R package version 1.0.4},   url = {https://github.com/DistanceDevelopment/dsims}, }"},{"path":[]},{"path":"/index.html","id":"distance-sampling-simulations","dir":"","previous_headings":"","what":"Distance Sampling Simulations","title":"Distance Sampling Simulations","text":"dsims package simulating distance sampling surveys allow users optimise survey design studies particular properties.","code":""},{"path":"/index.html","id":"using-dsims","dir":"","previous_headings":"","what":"Using dsims","title":"Distance Sampling Simulations","text":"currently three vignette within dsims package help get started using dsims: GettingStarted: Getting Started dsims available navigation bar top page Transition DSsim dsims: Articles navigation bar Grouped strata: Combining abundance estimates across strata constructed design purposes; Articles navigation bar","code":""},{"path":"/index.html","id":"getting-dsims","dir":"","previous_headings":"","what":"Getting dsims","title":"Distance Sampling Simulations","text":"easiest way get dsims install CRAN within R-studio R interface. endeavour make new functionality available CRAN timely manor. However, wish download development version latest updates immediately can using Hadley Wickham’s devtools package: install dsims github:","code":"# First, ensure you have a copy of the `devtools` package:   if (!nzchar(system.file(package = \"devtools\"))) install.packages(\"devtools\") library(devtools)   install_github(\"DistanceDevelopment/dsims\", build_vignettes = TRUE)"},{"path":"/index.html","id":"troubleshooting-tip","dir":"","previous_headings":"","what":"Troubleshooting tip","title":"Distance Sampling Simulations","text":"installation packages, may get message “packages recent versions available. recommended update . like update?” list packages. recommend typically choose option “CRAN packages ”. Note may get message packages installed already loaded. case, solution may note packages , open R console (rather R Studio) use Packages | Update packages menu option (update.packages function) update packages.","code":""},{"path":"/reference/add.hotspot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to add a hotspot to the density grid — add.hotspot","title":"S4 generic method to add a hotspot to the density grid — add.hotspot","text":"Uses Gaussian decay around central location add hotspot density grid.","code":""},{"path":"/reference/add.hotspot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to add a hotspot to the density grid — add.hotspot","text":"","code":"add.hotspot(object, centre, sigma, amplitude)  # S4 method for class 'Density' add.hotspot(object, centre, sigma, amplitude)"},{"path":"/reference/add.hotspot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to add a hotspot to the density grid — add.hotspot","text":"object Density-class object centre x,y-coordinate giving centre hotspot sigma value giving scale parameter gaussian decay amplitude height hotspot centre","code":""},{"path":"/reference/add.hotspot-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to add a hotspot to the density grid — add.hotspot","text":"updated Density-class object","code":""},{"path":[]},{"path":"/reference/analyse.data-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to run analyses — analyse.data","title":"S4 generic method to run analyses — analyse.data","text":"method carries analysis distance sampling data. method provided allow user perform diagnostics analyses used simulation. data argument can obtained call simulate.survey(object, dht.table = TRUE). Note first object supplied class DS.Analysis second argument must class DDf.Data. data argument may either class object argument class Simulation.","code":""},{"path":"/reference/analyse.data-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to run analyses — analyse.data","text":"","code":"analyse.data(analysis, data.obj, ...)  # S4 method for class 'DS.Analysis,Survey' analyse.data(analysis, data.obj, warnings = NULL, ...)  # S4 method for class 'DS.Analysis,data.frame' analyse.data(analysis, data.obj, warnings = NULL, transect = \"line\", ...)"},{"path":"/reference/analyse.data-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to run analyses — analyse.data","text":"analysis object class DS.Analysis data.obj object class Survey dataframe ... optional arguments (currently used) warnings list warnings many times arose transect character value either \"line\" \"point\" specifying type transect used survey","code":""},{"path":"/reference/analyse.data-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to run analyses — analyse.data","text":"list containing S3 ddf object optionally S3 dht object relating model minimum criteria. either returns list best model, warnings number successfully fitted models (warnings supplied list) otherwise displays warnings goes returns best fitting ds model.","code":""},{"path":"/reference/Density-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Density\" S4 class containing list grids describe density individuals / clusters population. list contains one grid (data.frame) strata.","code":""},{"path":"/reference/Density-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"region.name Object class \"character\"; region name. strata.name Object class \"character\"; strata names density.surface Object class \"list\"; list data.frames columns x, y density. must one data.frame strata. x.space Object class \"numeric\"; spacing gridpoints described density data.frames x-direction. y.space Object class \"numeric\"; spacing gridpoints described density data.frames y-direction. units Object class \"numeric\"; units grid points.","code":""},{"path":[]},{"path":"/reference/Density.Summary-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Density.Summary\" S4 class containing summary density grids strata.","code":""},{"path":"/reference/Density.Summary-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"summary summary average abundances densities strata.","code":""},{"path":[]},{"path":"/reference/description.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides a description of the summary object/output — description.summary","title":"Provides a description of the summary object/output — description.summary","text":"Prints list terms used simulation summary.","code":""},{"path":"/reference/description.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides a description of the summary object/output — description.summary","text":"","code":"description.summary()"},{"path":"/reference/description.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides a description of the summary object/output — description.summary","text":"return, displays explanation simulation summary","code":""},{"path":"/reference/description.summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provides a description of the summary object/output — description.summary","text":"Laura Marshall","code":""},{"path":"/reference/Detectability-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class ","title":"S4 Class ","text":"S4 Class \"Detectability\"","code":""},{"path":"/reference/Detectability-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 Class ","text":"key.function Object class \"character\"; code specifying detection function form (\"hn\" = half normal, \"hr\" = hazard rate.) scale.param Object class \"numeric\"; scale parameter detection function. shape.param Object class \"numeric\"; shape parameter detection function. cov.param Object class \"numeric\"; parameter values associated covariates. yet implemented truncation Object class \"numeric\"; maximum distance objects may detected.","code":""},{"path":[]},{"path":"/reference/DS.Analysis-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"DDF.Analysis\" S4 class describing basic  detection function model fitted distance sampling data.","code":""},{"path":"/reference/DS.Analysis-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"dfmodel Object class \"formula\"; describing detection function model. key key function use; \"hn\" gives half-normal (default), \"hr\" gives hazard-rate \"unif\" gives uniform. Note uniform key used, covariates included model. adjustment list containing adjustment parameters: adjustment - either \"cos\" (recommended), \"herm\" \"poly\", order - orders adjustment terms fit, scale - scale distances adjustment terms divided. See details. truncation Object class \"list\"; Specifies truncation distance analyses. cutpoints Object class \"character\"; gives cutpoints bins binned data analysis. er.var specifies encounter rate variance estimator use. control.opts list specify various options including monotonicity, method, initial.values. group.strata Dataframe two columns (\"design.id\" \"analysis.id\"). former gives strata names defined design (.e. region object) second specifies grouped (less strata) analyses criteria Object class \"character\"; describes model selection criteria use (\"AIC\",\"AICc\",\"BIC\").","code":""},{"path":"/reference/DS.Analysis-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"run.analysis signature=c(object = \"DS.Analysis\",  data = data.frame): runs analysis described object  data provided.","code":""},{"path":"/reference/dsims-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Sampling Simulations 'dsims' — dsims-package","title":"Distance Sampling Simulations 'dsims' — dsims-package","text":"Runs simulations distance sampling surveys help users optimise survey designs particular study.","code":""},{"path":"/reference/dsims-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance Sampling Simulations 'dsims' — dsims-package","text":"full process involves defining study region, description population interest (including distribution within study region), survey design, detection process one models fit resulting data. simulation engine use information generate population set transects simulate detection process. resulting data analysed estimates stored. repeating many times can test accuracy precision estimates various survey designs given particular population interest. package interfaces survey design package 'dssd' create survey regions, designs generate survey transects. 'DSsim' simulation package relied survey transects already contained shapefiles within supplied directory, dsims generate survey transects directly R. main functions package : make.density, make.population.description, make.detectability, make.ds.analysis, make.simulation, run.survey run.simulation. See also make.region make.design dssd package examples define study regions designs. information distance sampling methods example code available https://distancesampling.org/. Specifically, see website vignettes / example code https://distancesampling.org/resources/vignettes.html. help distance sampling package, Google Group https://groups.google.com/forum/#!forum/distance-sampling.","code":""},{"path":"/reference/dsims-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance Sampling Simulations 'dsims' — dsims-package","text":"Laura Marshall <lhm@st-.ac.uk> \"_PACKAGE\"","code":""},{"path":"/reference/generate.population-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to generate an instance of a population — generate.population","title":"S4 generic method to generate an instance of a population — generate.population","text":"Uses population description detectability details generate instance population. Note first argument supplied class Population.Description rather class Simulation detectability region must also supplied.","code":""},{"path":"/reference/generate.population-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to generate an instance of a population — generate.population","text":"","code":"generate.population(object, ...)  # S4 method for class 'Population.Description' generate.population(object, detectability = NULL, region = NULL)  # S4 method for class 'Simulation' generate.population(object, ...)"},{"path":"/reference/generate.population-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to generate an instance of a population — generate.population","text":"object object class Simulation Population.Description ... called object class Population.Description additional arguments detectability region.obj also supplied detectability object class Detectability (optional - required object class Population.Description) region region object population (optional - required object class Population.Description)","code":""},{"path":"/reference/generate.population-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to generate an instance of a population — generate.population","text":"Population-class object","code":""},{"path":"/reference/generate.transects.Simulation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"generate.transects — generate.transects,Simulation-method","title":"generate.transects — generate.transects,Simulation-method","text":"Generates set transects based design provided.","code":""},{"path":"/reference/generate.transects.Simulation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate.transects — generate.transects,Simulation-method","text":"","code":"# S4 method for class 'Simulation' generate.transects(object, quiet = FALSE, ...)"},{"path":"/reference/generate.transects.Simulation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate.transects — generate.transects,Simulation-method","text":"object object class Simulation quiet TRUE silences warnings ... implemented","code":""},{"path":"/reference/generate.transects.Simulation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate.transects — generate.transects,Simulation-method","text":"object class Transect dssd package","code":""},{"path":"/reference/get.densities-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to get density values — get.densities","title":"Method to get density values — get.densities","text":"method extracts density values density object. optionally also return x y centre points density grid cells.","code":""},{"path":"/reference/get.densities-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to get density values — get.densities","text":"","code":"get.densities(density, coords = FALSE)"},{"path":"/reference/get.densities-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to get density values — get.densities","text":"density object class Density coords TRUE also returns x, y coordinates","code":""},{"path":"/reference/get.densities-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to get density values — get.densities","text":"either returns numeric vector density values dataframe columns x, y density.","code":""},{"path":"/reference/get.N-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to return N — get.N","title":"S4 generic method to return N — get.N","text":"Returns population size","code":""},{"path":"/reference/get.N-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to return N — get.N","text":"","code":"get.N(object)  # S4 method for class 'Population.Description' get.N(object)"},{"path":"/reference/get.N-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to return N — get.N","text":"object object class Population.Description","code":""},{"path":"/reference/get.N-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to return N — get.N","text":"numeric value population size","code":""},{"path":"/reference/histogram.N.ests-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"histogram.N.ests — histogram.N.ests","title":"histogram.N.ests — histogram.N.ests","text":"Plots histogram estimates abundances","code":""},{"path":"/reference/histogram.N.ests-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"histogram.N.ests — histogram.N.ests","text":"","code":"histogram.N.ests(x, use.max.reps = FALSE, N.ests = \"individuals\", ...)"},{"path":"/reference/histogram.N.ests-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"histogram.N.ests — histogram.N.ests","text":"x object class Simulation use.max.reps default FALSE meaning simulation repetitions models converged data set included. setting TRUE repetition one models converged included summary results. N.ests character indicating whether plot estimates abundance 'individuals', 'clusters' ''. default individuals. ... optional parameters pass generic hist function graphics","code":""},{"path":"/reference/histogram.N.ests-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"histogram.N.ests — histogram.N.ests","text":"return value, displays histogram abundance estimates","code":""},{"path":"/reference/make.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Density object — make.density","title":"Creates a Density object — make.density","text":"Creates density grid across study area describing distribution animals.","code":""},{"path":"/reference/make.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Density object — make.density","text":"","code":"make.density(   region = make.region(),   x.space = 20,   y.space = NULL,   constant = numeric(0),   fitted.model = NULL,   density.formula = NULL,   density.surface = list() )"},{"path":"/reference/make.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Density object — make.density","text":"region Region object density grid created x.space intervals grid x direction y.space intervals grid y direction constant value describing constant density across surface. supplied default value 1 used strata. fitted.model gam object created using mgcv x y explanatory covariates. density.formula formula x /y describing density surface. density.surface Object class list; sf grid recording density grid polygons, density values within polygons central x y coordinates.","code":""},{"path":"/reference/make.density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Density object — make.density","text":"Density-class object","code":""},{"path":"/reference/make.density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Density object — make.density","text":"multiple ways create density grid. straight forward create grid constant values (high low areas can later added) pass fitted mgcv gam. gam model fitted x y explanatory variables. plan trying multiple animal distributions adding high low areas constant surface recommended make copy initial flat density grid object first step grid generation computationally intensive can take little complete, especially fine density grid.","code":""},{"path":[]},{"path":"/reference/make.density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Density object — make.density","text":"Laura Marshall","code":""},{"path":"/reference/make.density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Density object — make.density","text":"","code":"# A simple density surface with a constant value of 1 can be created within a rectangular # Create a region from shapefile shapefile.name <- system.file(\"extdata\", \"StAndrew.shp\", package = \"dssd\") region <- make.region(region.name = \"St Andrews bay\",                       shape = shapefile.name)  # Create a density object density <- make.density(region = region,                        x.space = 1000,                        constant = 1)  # Add some ares of higher / lower density density <- add.hotspot(object = density,                        centre = c(-170000, 6255000),                        sigma = 10000,                        amplitude = 4) density <- add.hotspot(object = density,                        centre = c(-150000, 6240000),                        sigma = 10000,                        amplitude = -0.9)  # Plot the density plot(density, region)"},{"path":"/reference/make.detectability.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Detectability object — make.detectability","title":"Creates a Detectability object — make.detectability","text":"detectability population described values class.","code":""},{"path":"/reference/make.detectability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Detectability object — make.detectability","text":"","code":"make.detectability(   key.function = \"hn\",   scale.param = 25,   shape.param = numeric(0),   cov.param = list(),   truncation = 50 )"},{"path":"/reference/make.detectability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Detectability object — make.detectability","text":"key.function specifies shape detection function (either half-normal \"hn\", hazard rate \"hr\" uniform \"uf\") scale.param numeric vector either single value applied globally value strata. supplied natural scale. shape.param numeric vector either single value applied globally value strata. supplied natural scale. cov.param Named list one named entry per individual level covariate. Covariate parameter values defined log scale (rather natural scale), scale provided ddf output mrds also MCDS output Distance. Cluster sizes parameter values can defined . list entry either data.frame containing 2 3 columns: level, param desired strata. region multiple strata column omitted values assumed apply globally. cluster size entry list must named 'size'. Alternatively list element may numeric vector either single value applied globally value strata. truncation maximum perpendicular (radial) distance objects may detected line (point) transect.","code":""},{"path":"/reference/make.detectability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Detectability object — make.detectability","text":"Detectability-class object","code":""},{"path":[]},{"path":"/reference/make.detectability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Detectability object — make.detectability","text":"Laura Marshall","code":""},{"path":"/reference/make.detectability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Detectability object — make.detectability","text":"","code":"# Multi-strata example (make sf shape) s1 = matrix(c(0,0,0,2,1,2,1,0,0,0),ncol=2, byrow=TRUE) s2 = matrix(c(1,0,1,2,2,2,2,0,1,0),ncol=2, byrow=TRUE) pol1 = sf::st_polygon(list(s1)) pol2 = sf::st_polygon(list(s2)) sfc <- sf::st_sfc(pol1,pol2) strata.names <- c(\"low\", \"high\") sf.pol <- sf::st_sf(strata = strata.names, geom = sfc)  region <- make.region(region.name = \"Multi-strata Eg\",                       strata.name = strata.names,                       shape = sf.pol)  density <- make.density(region = region,                         x.space = 0.22,                         constant = c(20,50))  covs <- list() covs$size <- list(list(distribution = \"poisson\", lambda = 25),                   list(distribution = \"poisson\", lambda = 15)) covs$sex <- data.frame(level = rep(c(\"male\", \"female\"),2),                       prob = c(0.5, 0.5, 0.6, 0.4),                       strata = c(rep(\"low\",2),rep(\"high\",2)))  # Define the population description (this time using the density to determine # the population size) popdesc <- make.population.description(region = region,                                        density = density,                                        covariates = covs,                                        fixed.N = FALSE)  cov.param <- list() cov.param$size <- c(log(1.02),log(1.005)) cov.param$sex <- data.frame(level = c(\"male\", \"female\", \"male\", \"female\"),                             param = c(log(1.5), 0, log(1.7), log(1.2)),                             strata = c(\"low\",\"low\",\"high\",\"high\"))  # define the detecability detect <- make.detectability(key.function = \"hn\",                              scale.param = 0.08,                              cov.param = cov.param,                              truncation = 0.2)  plot(detect, popdesc)"},{"path":"/reference/make.ds.analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an Analysis object — make.ds.analysis","title":"Creates an Analysis object — make.ds.analysis","text":"method creates Analysis objects describes one models fit distance data. simulation fit models data generated simulation select model minimum criteria value.","code":""},{"path":"/reference/make.ds.analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an Analysis object — make.ds.analysis","text":"","code":"make.ds.analysis(   dfmodel = list(~1),   key = \"hn\",   truncation = numeric(0),   cutpoints = numeric(0),   er.var = \"R2\",   control.opts = list(),   group.strata = data.frame(),   criteria = \"AIC\" )"},{"path":"/reference/make.ds.analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an Analysis object — make.ds.analysis","text":"dfmodel list distance sampling model formula specifying detection function (see ?Distance::ds details) key key function use; \"hn\" gives half-normal (default) \"hr\" gives hazard-rate. truncation absolute truncation distance simulation units matching region units. cutpoints supply vector cutpoints wish simulation perform binned analyses. er.var encounter rate variance estimator use abundance estimates required. Defaults \"R2\" line transects \"P3\" point transects. See mrds::varn information / options. control.opts list control options: method - optimisation method, group.strata Dataframe two columns (\"design.id\" \"analysis.id\"). former gives strata names defined design (.e. region object) second specifies grouped (less strata) analyses. See details information. criteria character model selection criteria (AIC, AICc, BIC)","code":""},{"path":"/reference/make.ds.analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an Analysis object — make.ds.analysis","text":"DS.Analysis-class object","code":""},{"path":"/reference/make.ds.analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates an Analysis object — make.ds.analysis","text":"possible group strata analysis stage using group.strata argument. example, design purposes may sensible divide strata substrata. can help make convex shapes therefore zigzag designs efficient perhaps helped keep transects angled parallel density gradients across study area. Despite (purely design relevant) substrata may still wish calculate estimates density / abundance etc. stratum. table gives example data.frame can used . Imagine study region onshore strata offshore strata. onshore strata divided two design stage keep transects perpendicular coast. now want analyse just two strata onshore offshore.","code":""},{"path":[]},{"path":"/reference/make.ds.analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates an Analysis object — make.ds.analysis","text":"Laura Marshall","code":""},{"path":"/reference/make.ds.analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an Analysis object — make.ds.analysis","text":"","code":"# Model selection considering both a half-normal and a hazard-rate model # using AIC criteria and truncating 5% of the data ds.analyses <- make.ds.analysis(dfmodel = ~1,                                 key = c(\"hn\", \"hr\"),                                 truncation = 500,                                 criteria = \"AIC\")  # Model selection considering both a half-normal with no covariates and with size # as a covariate using AIC criteria and truncating at 500 ds.analyses <- make.ds.analysis(dfmodel = list(~1, ~size),                                 key = \"hn\",                                 truncation = 500,                                 criteria = \"AIC\")  # Model selection considering both a half-normal with no covariates and with size # as a covariate and a hazard rate, using AIC criteria and truncating at 500 ds.analyses <- make.ds.analysis(dfmodel = list(~1, ~size, ~1),                                 key = c(\"hn\", \"hn\", \"hr\"),                                 truncation = 500,                                 criteria = \"AIC\")"},{"path":"/reference/make.population.description.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Population.Description object — make.population.description","title":"Creates a Population.Description object — make.population.description","text":"Creates object describes population. values object used create instances population.","code":""},{"path":"/reference/make.population.description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Population.Description object — make.population.description","text":"","code":"make.population.description(   region = make.region(),   density = make.density(),   covariates = list(),   N = numeric(0),   fixed.N = TRUE )"},{"path":"/reference/make.population.description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Population.Description object — make.population.description","text":"region Region object population exists (see make.region). density Density object describing distribution individuals / clusters (see make.density). covariates Named list one named entry per individual-level covariate. Cluster sizes can defined , must named 'size'. distribution covariate values can either defined specifying particular distribution parameters discrete distribution dataframe. Dataframes columns level prob (optionally strata) specifying covariates levels, probabilities strata strata specific. Distributions can defined lists named entries distribution relevant parameters specified details. list distributions can provided one strata. N number individuals / clusters population one value per strata. Total population size 1000 default. fixed.N logical value. TRUE population generated value(s) N otherwise generated values density grid.","code":""},{"path":"/reference/make.population.description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Population.Description object — make.population.description","text":"Population.Description-class","code":""},{"path":"/reference/make.population.description.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Population.Description object — make.population.description","text":"Individual-level covariate values can defined one following distributions: 'normal', 'poisson', 'ztruncpois' 'lognormal'. distribution name associated parameters defined table must provided named list. Either one list can provided entire study area multiple lists grouped together list one per strata.","code":""},{"path":[]},{"path":"/reference/make.population.description.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Population.Description object — make.population.description","text":"Laura Marshall","code":""},{"path":"/reference/make.population.description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Population.Description object — make.population.description","text":"","code":"# Create a basic rectangular study area region <- make.region()  # Make a density grid (large spacing for speed) density <- make.density(region = region,                         x.space = 200,                         y.space = 100,                         constant = 1) density <- add.hotspot(density, centre = c(1000, 100), sigma = 250, amplitude = 10)  # Define some covariate values for out population covs <- list() covs$size <- list(distribution = \"ztruncpois\", mean = 5)  # Define the population description popdsc <- make.population.description(region = region,                                       density = density,                                       covariates = covs,                                       N = 200)  # define the detecability detect <- make.detectability(key.function = \"hn\", scale.param = 25, truncation = 50)  # generate an example population pop <- generate.population(popdsc, region = region, detectability = detect)  plot(pop, region)   # Multi-strata example (make sf shape) s1 = matrix(c(0,0,0,2,1,2,1,0,0,0),ncol=2, byrow=TRUE) s2 = matrix(c(1,0,1,2,2,2,2,0,1,0),ncol=2, byrow=TRUE) pol1 = sf::st_polygon(list(s1)) pol2 = sf::st_polygon(list(s2)) sfc <- sf::st_sfc(pol1,pol2) strata.names <- c(\"low\", \"high\") sf.pol <- sf::st_sf(strata = strata.names, geom = sfc)  region <- make.region(region.name = \"Multi-strata Eg\",                       strata.name = strata.names,                       shape = sf.pol) # \\donttest{ density <- make.density(region = region,                         x.space = 0.22,                         constant = c(10,80))  covs <- list() covs$size <- list(list(distribution = \"poisson\", lambda = 25),                   list(distribution = \"poisson\", lambda = 15)) covs$sex <- data.frame(level = rep(c(\"male\", \"female\"),2),                       prob = c(0.5, 0.5, 0.6, 0.4),                       strata = c(rep(\"low\",2),rep(\"high\",2)))  # Define the population description (this time using the density to determine # the population size) popdesc <- make.population.description(region = region,                                        density = density,                                        covariates = covs,                                        fixed.N = FALSE)  # define the detecability (see make.detectability to alter detection function # for different covariate values) detect <- make.detectability(key.function = \"hn\", scale.param = 25, truncation = 50)  # generate an example population pop <- generate.population(popdesc, region = region, detectability = detect)  plot(pop, region)  # }"},{"path":"/reference/make.simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Simulation object — make.simulation","title":"Creates a Simulation object — make.simulation","text":"creates simulation information necessary dsims generate population, create transects, simulate survey process fit detection functions estimate density / abundance. function can used based default values create simple line transect example, see Examples . create complex simulations advisable define different parts simulation individually grouping together. See Arguments links functions make definitions individual simulation components. depth example please refer 'GettingStarted' vignette.","code":""},{"path":"/reference/make.simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Simulation object — make.simulation","text":"","code":"make.simulation(   reps = 10,   design = make.design(),   population.description = make.population.description(),   detectability = make.detectability(),   ds.analysis = make.ds.analysis() )"},{"path":"/reference/make.simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Simulation object — make.simulation","text":"reps number times simulation repeated design object class Survey.Design created call make.design population.description object class Population.Description created call make.population.description detectability object class Detectability created call make.detectability ds.analysis objects class DS.Analysis created call make.ds.analysis","code":""},{"path":"/reference/make.simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Simulation object — make.simulation","text":"Simulation-class object","code":""},{"path":"/reference/make.simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Simulation object — make.simulation","text":"make.simulation function now set  default (exception specifying point transects rather   line) can run simple simulation example. See examples.","code":""},{"path":[]},{"path":"/reference/make.simulation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a Simulation object — make.simulation","text":"Laura Marshall","code":""},{"path":"/reference/make.simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Simulation object — make.simulation","text":"","code":"# Create a basic rectangular study area region <- make.region()  # Make a density grid (large spacing for speed) density <- make.density(region = region,                         x.space = 300,                         y.space = 100,                         constant = 1) density <- add.hotspot(density, centre = c(1000, 100), sigma = 250, amplitude = 10)  # Define the population description popdsc <- make.population.description(region = region,                                       density = density,                                       N = 200)  # Define the detecability detect <- make.detectability(key.function = \"hn\",                              scale.param = 25,                              truncation = 50)  # Define the design design <- make.design(region = region,                       transect.type = \"line\",                       design = \"systematic\",                       samplers = 20,                       design.angle = 0,                       truncation = 50)  # Define the analyses ds.analyses <- make.ds.analysis(dfmodel = ~1,                                 key = \"hn\",                                 truncation = 50,                                 criteria = \"AIC\")  # Put all the components together in the simulation (note no. of replicates # reps = 1 is only for a single test run and should be 999 or more to be able # to draw inference.) simulation <- make.simulation(reps = 1,                               design = design,                               population.description = popdsc,                               detectability = detect,                               ds.analysis = ds.analyses)  # run an example survey to check the setup survey <- run.survey(simulation) plot(survey, region)   # Run the simulation # Warning: if you have increased the number of replications then it can take a # long time to run! simulation <- run.simulation(simulation) #>  1 out of 1 reps       summary(simulation) #>  #> GLOSSARY #> -------- #>  #> Summary of Simulation Output #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #>  #> Region          : the region name. #> No. Repetitions : the number of times the simulation was repeated. #> No. Excluded Repetitions : the number of times the simulation failed #>                   (too few sightings, model fitting failure etc.) #>  #> Summary for Individuals #> ~~~~~~~~~~~~~~~~~~~~~~~ #>  #> Summary Statistics: #>    mean.Cover.Area : mean covered across simulation. #>    mean.Effort     : mean effort across simulation. #>    mean.n          : mean number of observed objects across #>                      simulation. #>    mean.n.miss.dist: mean number of observed objects where no distance #>                     was recorded (only displayed if value > 0). #>    no.zero.n       : number of surveys in simulation where #>                      nothing was detected (only displayed if value > 0). #>    mean.ER         : mean encounter rate across simulation. #>    mean.se.ER      : mean standard error of the encounter rates #>                      across simulation. #>    sd.mean.ER      : standard deviation of the encounter rates #>                      across simulation. #>  #> Estimates of Abundance: #>    Truth            : true population size, (or mean of true #>                       population sizes across simulation for Poisson N. #>    mean.Estimate    : mean estimate of abundance across simulation. #>    percent.bias     : the percentage of bias in the estimates. #>    RMSE             : root mean squared error/no. successful reps #>    CI.coverage.prob : proportion of times the 95% confidence interval #>                       contained the true value. #>    mean.se          : the mean standard error of the estimates of #>                       abundance #>    sd.of.means      : the standard deviation of the estimates #>  #> Estimates of Density: #>    Truth            : true average density. #>    mean.Estimate    : mean estimate of density across simulation. #>    percent.bias     : the percentage of bias in the estimates. #>    RMSE             : root mean squared error/no. successful reps #>    CI.coverage.prob : proportion of times the 95% confidence interval #>                       contained the true value. #>    mean.se          : the mean standard error of the estimates. #>    sd.of.means      : the standard deviation of the estimates. #>  #> Detection Function Values #> ~~~~~~~~~~~~~~~~~~~~~~~~~ #>  #>  mean.observed.Pa : mean proportion of individuals/clusters observed in #>                     the covered region. #>  mean.estimte.Pa  : mean estimate of the proportion of individuals/ #>                     clusters observed in the covered region. #>  sd.estimate.Pa   : standard deviation of the mean estimates of the #>                     proportion of individuals/clusters observed in the #>                     covered region. #>  mean.ESW         : mean estimated strip width. #>  sd.ESW           : standard deviation of the mean estimated strip widths. #>  #>  #> Region:  region #> No. Repetitions:  1 #> No. Excluded Repetitions:  0 #> Using only repetitions where all models converged. #>  #> Design:  Systematic parallel line design #>    design.type :  Systematic parallel line design #>    bounding.shape :  rectangle #>    samplers :  20 #>    design.angle :  0 #>    edge.protocol :  minus #>  #> Population Detectability Summary: #>     key.function  =  hn #>     scale.param  =  25 #>     truncation  =  50 #>  #> Analysis Summary: #>    Candidate Models: #>       Model 1: key function 'hn', formula '~1', was selected 1 time(s). #>    criteria  =  AIC #>    variance.estimator  =  R2 #>    truncation  =  50 #>  #> Summary for Individuals #>  #> Summary Statistics #>  #>   mean.Cover.Area mean.Effort mean.n mean.k mean.ER  mean.se.ER sd.mean.ER #> 1           1e+06       10000    116     20  0.0116 0.002630189         NA #>  #>      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> Estimates of Abundance (N) #>  #>   Truth mean.Estimate percent.bias  RMSE CI.coverage.prob mean.se sd.of.means #> 1   200        180.93        -9.54 19.07                1    43.3          NA #>  #>      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> Estimates of Density (D) #>  #>   Truth mean.Estimate percent.bias         RMSE CI.coverage.prob      mean.se #> 1 2e-04  0.0001809257    -9.537164 1.907433e-05                1 4.329508e-05 #>   sd.of.means #> 1          NA #>  #>      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #>      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #>  #> Detection Function Values #>  #>   mean.observed.Pa mean.estimate.Pa sd.estimate.Pa mean.ESW sd.ESW #> 1             0.58             0.64             NA    32.06     NA  # For a more in depth example please look at vignette(\"GettingStarted\", 'dsims') #> Warning: vignette 'GettingStarted' not found"},{"path":"/reference/plot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"plot — plot,Survey,Region-method","title":"plot — plot,Survey,Region-method","text":"Produces four plots survey: 1) Plots transects inside survey region, 2) plots population, 3) plots transects, population detections 4) plots histogram detection distances. Note plots 3 & 4 generated without survey region Region omitted.","code":""},{"path":"/reference/plot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot — plot,Survey,Region-method","text":"","code":"# S4 method for class 'Survey,Region' plot(x, y, type = \"all\", ...)  # S4 method for class 'Survey,ANY' plot(x, y = NULL, type = \"all\", ...)"},{"path":"/reference/plot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot — plot,Survey,Region-method","text":"x object class Survey y object class Region NULL type character specifies plots like, defaults \"\". options include \"transects\", \"population\", \"survey\" \"distances\". plot transects, population locations, transects population detections indicated histogram detection distances, respectively. Note final plots available one detections. \"survey\" \"distances\" available y Region argument supplied. ... additional plotting parameters","code":""},{"path":"/reference/plot-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot — plot,Survey,Region-method","text":"Generate 4 plots showing survey population, transects (including covered areas), detections histogram detection distances. Plots include survey region. Also invisibly returns list ggplot objects user like customise plots. Generate 2 plots showing survey population, transects (including covered areas), detections histogram detection distances. Plots include survey region. Also invisibly returns list ggplot objects user like customise plots.","code":""},{"path":"/reference/plot.Density-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Density,ANY-method","title":"Plot — plot,Density,ANY-method","text":"Plots S4 object class 'Density' Plots S4 object class 'Density'","code":""},{"path":"/reference/plot.Density-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Density,ANY-method","text":"","code":"# S4 method for class 'Density,ANY' plot(x, y, strata = \"all\", title = \"\", scale = 1)  # S4 method for class 'Density,Region' plot(x, y, strata = \"all\", title = \"\", scale = 1, line.col = gray(0.2))"},{"path":"/reference/plot.Density-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Density,ANY-method","text":"x object class Density y object class Region strata strata name number plotted. default strata plotted. title plot title scale used scale x y values plot (warning may give unstable results projection defined study area!) line.col sets line colour shapefile","code":""},{"path":"/reference/plot.Density-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot,Density,ANY-method","text":"ggplot object ggplot object","code":""},{"path":"/reference/plot.Detectability-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Detectability,ANY-method","title":"Plot — plot,Detectability,ANY-method","text":"Plots S4 object class 'Detectability'","code":""},{"path":"/reference/plot.Detectability-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Detectability,ANY-method","text":"","code":"# S4 method for class 'Detectability,ANY' plot(   x,   y,   add = FALSE,   plot.units = character(0),   region.col = NULL,   gap.col = NULL,   main = \"\",   ... )  # S4 method for class 'Detectability,Population.Description' plot(   x,   y,   add = FALSE,   plot.units = character(0),   region.col = NULL,   gap.col = NULL,   main = \"\",   ... )"},{"path":"/reference/plot.Detectability-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Detectability,ANY-method","text":"x object class Detectability y object class Population.Description add logical indicating whether added existing plot plot.units allows units converted m km region.col fill colour region gap.col fill colour gaps main character plot title ... general plot parameters","code":""},{"path":"/reference/plot.Detectability-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot,Detectability,ANY-method","text":"return value, gives warning user return value, plotting function","code":""},{"path":"/reference/plot.Population-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,Population,ANY-method","title":"Plot — plot,Population,ANY-method","text":"Unused, give warning region must also supplied. Plots S4 object class 'Population'. Requires associated region already plotted. function adds locations individuals/clusters population.","code":""},{"path":"/reference/plot.Population-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,Population,ANY-method","text":"","code":"# S4 method for class 'Population,ANY' plot(x, y, ...)  # S4 method for class 'Population,Region' plot(x, y, ...)"},{"path":"/reference/plot.Population-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,Population,ANY-method","text":"x object class Population y object class Region ... general plot parameters","code":""},{"path":"/reference/plot.Population-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot,Population,ANY-method","text":"ggplot object","code":""},{"path":"/reference/Population-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Contains instance population including description detectability form object class Detectability.","code":""},{"path":"/reference/Population-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"region.name Object class \"character\"; name region object. strata.names Object class \"character\"; names strata. N Object class \"numeric\"; number individuals/clusters. D Object class \"numeric\"; density individuals/clusters. population Object class \"data.frame\"; locations individuals/clusters population covariates. detectability Object class \"Detectability\"; describes easily individuals/clusters can detected.","code":""},{"path":"/reference/Population-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"plot signature=(object = \"Line.Transect\"): plots locations  individuals/clusters.","code":""},{"path":[]},{"path":"/reference/Population.Description-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Population.Description\" S4 class containing description population. provides methods generate example population.","code":""},{"path":"/reference/Population.Description-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"N Object class \"numeric\"; number individuals population (optional). density Object class \"Density\"; describes population density region.name Object class \"character\"; name region population exists. strata.names Character vector giving strata names study region. covariates Named list one named entry per individual level covariate. Cluster sizes can defined . list entry either data.frame containing 2 columns, first level (level) second probability size logical value indicating whether population occurs clusters. (prob). cluster size entry list must named 'size'. gen..N Object class \"logical\"; TRUE N fixed otherwise generated Poisson distribution.","code":""},{"path":"/reference/Population.Description-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"get.N signature=(object = \"Population.Description\"):  returns value N generate.population signature=(object = \"Population.Description\"): generates single realisation population.","code":""},{"path":[]},{"path":"/reference/run.simulation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to run a simulation — run.simulation","title":"Method to run a simulation — run.simulation","text":"Runs simulation returns simulation object results. running parallel max.cores specified default using one less number cores / threads machine. example code see make.simulation","code":""},{"path":"/reference/run.simulation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to run a simulation — run.simulation","text":"","code":"run.simulation(   simulation,   run.parallel = FALSE,   max.cores = NA,   counter = TRUE,   transect.path = character(0),   progress.file = character(0) )"},{"path":"/reference/run.simulation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to run a simulation — run.simulation","text":"simulation Simulation-class object run.parallel logical option use multiple processors max.cores integer maximum number cores use, specified one less number available used. counter logical indicates like see progress counter. transect.path character gives pathway folder shapefiles path single shapefile (.shp file) give transects used simulations. folder transects new shapefile used repetition. path specifying single shapefile transects used repetition. progress.file character path filename output progress file Distance Windows progress counter. used running directly R.","code":""},{"path":"/reference/run.simulation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to run a simulation — run.simulation","text":"Simulation-class object now includes results","code":""},{"path":[]},{"path":"/reference/run.survey-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 generic method to simulate a survey — run.survey","title":"S4 generic method to simulate a survey — run.survey","text":"Simulates process individuals clusters detected. simulation passed generate population, set transects simulate detection process. survey passed simply simulate detection process. See make.simulation example usage.","code":""},{"path":"/reference/run.survey-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 generic method to simulate a survey — run.survey","text":"","code":"run.survey(object, ...)  # S4 method for class 'Simulation' run.survey(object, filename = character(0))  # S4 method for class 'Survey.LT' run.survey(object, region = NULL)  # S4 method for class 'Survey.PT' run.survey(object, region = NULL)"},{"path":"/reference/run.survey-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 generic method to simulate a survey — run.survey","text":"object object class Simulation ... allows extra arguments filename optional argument specifying path shapefile transects loaded file. region object class Region.","code":""},{"path":"/reference/run.survey-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 generic method to simulate a survey — run.survey","text":"object inherits Survey-class object. Survey.LT-class object case simulation line transect design Survey.PT-class simulation point transect design.","code":""},{"path":[]},{"path":"/reference/rztpois.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"Generates values zero-truncated Poisson distribution mean equal specified. uses optimisation routine check value lambda give values requested mean.","code":""},{"path":"/reference/rztpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"","code":"rztpois(n, mean = NA)"},{"path":"/reference/rztpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"n number values randomly generate mean mean generated values","code":""},{"path":"/reference/rztpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"returns randomly generated value zero-truncated Poisson distribution.","code":""},{"path":"/reference/rztpois.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"Internal function intended called user.","code":""},{"path":"/reference/rztpois.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Randomly generates values from a zero-truncated Poisson distribution — rztpois","text":"Len Thomas","code":""},{"path":"/reference/save.sim.results-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"save.sim.results — save.sim.results","title":"save.sim.results — save.sim.results","text":"Saves simulation results replicate file. save 3 txt files, one abundance estimation individuals, one abundance estimation clusters (applicable) one detectability estimates model selection information.","code":""},{"path":"/reference/save.sim.results-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save.sim.results — save.sim.results","text":"","code":"save.sim.results(simulation, filepath = character(0), sim.ID = numeric(0))"},{"path":"/reference/save.sim.results-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save.sim.results — save.sim.results","text":"simulation object class Simulation run. filepath optionally path directory like files saved, otherwise save working directory. sim.ID optionally can add simulation ID filename","code":""},{"path":"/reference/save.sim.results-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"save.sim.results — save.sim.results","text":"invisibly returns original simulation object","code":""},{"path":"/reference/save.sim.results-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"save.sim.results — save.sim.results","text":"L. Marshall","code":""},{"path":"/reference/set.densities-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to set density values — set.densities","title":"Method to set density values — set.densities","text":"method sets density values density object.","code":""},{"path":"/reference/set.densities-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to set density values — set.densities","text":"","code":"set.densities(density, densities)"},{"path":"/reference/set.densities-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to set density values — set.densities","text":"density object class Density densities numeric vector density values update density grid .","code":""},{"path":"/reference/set.densities-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to set density values — set.densities","text":"returns Density object updated density values","code":""},{"path":"/reference/show.Density.Summary-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show,Density.Summary-method","title":"show — show,Density.Summary-method","text":"displays density summary table","code":""},{"path":"/reference/show.Density.Summary-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show,Density.Summary-method","text":"","code":"# S4 method for class 'Density.Summary' show(object)"},{"path":"/reference/show.Density.Summary-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show,Density.Summary-method","text":"object object class Density.Summary","code":""},{"path":"/reference/show.Density.Summary-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show — show,Density.Summary-method","text":"return value, displays density summary","code":""},{"path":"/reference/show.Simulation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show,Simulation-method","title":"show — show,Simulation-method","text":"currently implemented","code":""},{"path":"/reference/show.Simulation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show,Simulation-method","text":"","code":"# S4 method for class 'Simulation' show(object)"},{"path":"/reference/show.Simulation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show,Simulation-method","text":"object object class Simulation","code":""},{"path":"/reference/show.Simulation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show — show,Simulation-method","text":"return value, displays summary simulation","code":""},{"path":"/reference/show.Simulation.Summary-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show,Simulation.Summary-method","title":"show — show,Simulation.Summary-method","text":"Displays simulation summary","code":""},{"path":"/reference/show.Simulation.Summary-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show,Simulation.Summary-method","text":"","code":"# S4 method for class 'Simulation.Summary' show(object)"},{"path":"/reference/show.Simulation.Summary-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show,Simulation.Summary-method","text":"object object class Simulation.Summary","code":""},{"path":"/reference/show.Simulation.Summary-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show — show,Simulation.Summary-method","text":"return value, displays information Simulation.Summary object","code":""},{"path":"/reference/Simulation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Simulation\" S4 class containing descriptions region, population, survey design analyses user wishes investigate. simulation run N.D.Estimates contain multiple estimates abundance density obtained repeatedly generating populations, simulating survey completing analyses.","code":""},{"path":"/reference/Simulation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"reps Object class \"numeric\"; number times simulation repeated. single.transect.set Object class \"logical\"; TRUE set transects used repetition. design Object class \"Survey.Design\"; survey design. population.description Object class \"Population.Description\"; population.description. detectability Object class \"Detectability\"; description detectability population. ds.analysis Object class \"DS.Analysis\" add.options list expand simulation options future. ddf.param.ests Object class \"array\"; stores parameters associated detection function. results \"list\" elements 'individuals' (optionally 'clusters' 'expected.size') well 'Detection'. 'individuals' 'clusters' elements list three 3-dimensional arrays. first summary array containing values 'Area' (strata area), 'CoveredArea' (area covered strata survey), Effort' (line length number points surveyed), 'n' (number sightings), 'n.miss.dists' (number missing distances - applicable mixed detector types yet implemented dsims), 'k' (number transects), 'ER' (encounter rate), 'se.ER' (standard error encounter rate), 'cv.ER' (coefficient variation encounter rate). value provided strata well region whole simulation repetition well storing mean standard deviation values across simulation repetitions. second array 'N' abundance estimates table. contains values 'Estimate' (estimated abundance based data iteration ), 'se' (standard error associated estimate), 'cv' (coefficient variation estimate), 'lcl' (lower 95% confidence interval value), 'ucl' (upper 95% confidence interval value), 'df' degrees freedom associated estimate. value provided strata well region whole simulation repetition well storing mean standard deviation values across simulation repetitions. third array 'D' density estimates table. contains values 'Estimate' (estimated density based data iteration ), 'se' (standard error associated estimate), 'cv' (coefficient variation estimate), 'lcl' (lower 95% confidence interval value), 'ucl' (upper 95% confidence interval value), 'df' degrees freedom associated estimate. value provided strata well region whole simulation repetition well storing mean standard deviation values across simulation repetitions. animals occur clusters expected.size element results list contains 3-dimensional array. gives values 'Expected.S' (expected cluster size), 'se.Expected.S' (standard error expected cluster size), 'cv.Expected.S' (coefficient variation expected cluster size). Values given analysis strata well value survey region whole across simulation repetition well overall means standard deviations across repetitions. Detection element results list 3-dimensional array values 'True.Pa' (proportion animals covered region detected), 'Pa' (estimated proportion animals detected covered region), 'ESW' (estimated strip width), 'f(0)' (estimated value detection function pdf distance 0), 'SelectedModel' (index model best fit dataset repetition), 'DeltaCriteria' (difference information criteria best second best fitting models two models fitted converged), 'SuccessfulModels' (number models successfully converged). Currently detection functions pooled across strata one global value simulated dataset well mean value standard deviation appropriate. warnings \"list\" store warnings error messages encountered runtime.","code":""},{"path":"/reference/Simulation-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"summary signature=(object = \"Simulation\"): produces  summary simulation results. generate.population signature = (object =  \"Simulation\"): generates single instance population. generate.transects signature = (object =  \"Simulation\"): generates single set transects. run.survey signature = (object =  \"Simulation\"): carries simulation process far generating  distance data returns object containing population,  transects data. run.simulation signature = (simulation = \"Simulation\"): runs  whole simulation specified number repetitions.","code":""},{"path":[]},{"path":"/reference/Simulation.Summary-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Simulation.Summary\" S4 class containing summary simulation results. returned summary(Simulation) called. assigned variable object displayed via show method.","code":""},{"path":"/reference/Simulation.Summary-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"show signature=(object = \"Simulation.Summary\"): prints  contents object user friendly format.","code":""},{"path":"/reference/summary.Density-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary,Density-method","title":"summary — summary,Density-method","text":"Provides summary table density object.","code":""},{"path":"/reference/summary.Density-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary,Density-method","text":"","code":"# S4 method for class 'Density' summary(object, ...)"},{"path":"/reference/summary.Density-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary,Density-method","text":"object object class Simulation ... implemented","code":""},{"path":"/reference/summary.Density-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary — summary,Density-method","text":"Density.Summary-class object","code":""},{"path":"/reference/summary.Simulation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary,Simulation-method","title":"summary — summary,Simulation-method","text":"Provides summary simulation results.","code":""},{"path":"/reference/summary.Simulation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary,Simulation-method","text":"","code":"# S4 method for class 'Simulation' summary(object, description.summary = TRUE, use.max.reps = FALSE, ...)"},{"path":"/reference/summary.Simulation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary,Simulation-method","text":"object object class Simulation description.summary logical indicating whether explanation summary displayed use.max.reps default FALSE meaning simulation repetitions models converged data set included. setting TRUE repetition one models converged included summary results. ... additional arguments currently implemented","code":""},{"path":"/reference/summary.Simulation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary — summary,Simulation-method","text":"Object class Simulation.Summary","code":""},{"path":"/reference/Survey-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Class ","title":"Virtual Class ","text":"Class \"Survey\" S4 class containing instance population.","code":""},{"path":"/reference/Survey-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Virtual Class ","text":"population Object class \"Population\"; instance population.","code":""},{"path":"/reference/Survey.LT-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Survey.LT\" S4 class containing population set transects.","code":""},{"path":"/reference/Survey.LT-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"transect Object class \"Line.Transect\"; line transects. perpendicular.truncation Object class \"numeric\"; maximum distance transect animals may detected.","code":""},{"path":[]},{"path":"/reference/Survey.PT-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Survey.PT\" S4 class containing population set transects.","code":""},{"path":"/reference/Survey.PT-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"transect Object class \"Point.Transect\"; point transects. radial.truncation Object class \"numeric\"; maximum distance transect animals may detected.","code":""},{"path":[]},{"path":"/news/index.html","id":"dsims-106","dir":"Changelog","previous_headings":"","what":"dsims 1.0.6","title":"dsims 1.0.6","text":"Bug Fixes Fixed bug simulation checks generated error projected shapes. Issue #94","code":""},{"path":"/news/index.html","id":"dsims-105","dir":"Changelog","previous_headings":"","what":"dsims 1.0.5","title":"dsims 1.0.5","text":"CRAN release: 2024-12-20 Bug Fixes Fixed bug generated NA’s scale parameters factor covariates included. Issue #89 Simulation validation checks: consistency truncation distances (Issue #76), consistency region (Issue #88)","code":""},{"path":"/news/index.html","id":"dsims-104","dir":"Changelog","previous_headings":"","what":"dsims 1.0.4","title":"dsims 1.0.4","text":"CRAN release: 2023-11-29 Bug Fixes Fixed bug generating simulation summary meant first value mean.k n.miss.dists repeated rather including values summary tables. Issue #84 make.simulation function now throws error P2 ER variance estimator used line transects designs (rather simulation completed). Issue #61","code":""},{"path":"/news/index.html","id":"dsims-103","dir":"Changelog","previous_headings":"","what":"dsims 1.0.3","title":"dsims 1.0.3","text":"Bug Fixes Simulations crashing zero detections - now fixed warnings displayed instead. Issue #77 Errors also occurring individuals generated stratum, now fixed. Issue #80 Detections longer permitted across stratum boundaries - causing errors due NA area values data. inline expected protocols surveys. Issue #81 Remove dependence sp rgeos. Issue #42","code":""},{"path":"/news/index.html","id":"dsims-102","dir":"Changelog","previous_headings":"","what":"dsims 1.0.2","title":"dsims 1.0.2","text":"Bug Fixes Fixed transparency issue detection distance histograms saving wmf (generated warning Distance Windows) print summary table individuals animals occur individuals (clusters) Updated references examples Fixed grouped strata bugs Can now read transect shapefiles file convert one strata global region used. allows regional simulations stratified designs distance windows.","code":""},{"path":"/news/index.html","id":"dsims-101","dir":"Changelog","previous_headings":"","what":"dsims 1.0.1","title":"dsims 1.0.1","text":"CRAN release: 2022-08-30 New Features Added save.sim.results function simulation results can written .txt files. mainly useful Distance Windows users R users probably prefer just save whole simulation object file. Can write simulation progress file - allows simulation progress displayed simulations run Distance Windows using dsims. Add segmented trackline design option simulation summary (currently design can generated inside Distance Windows use simulations). Bug Fixes Partial fix bug relating grouping strata analysis stage. Strata grouping now work detections individuals. Still needs fixed clusters present.","code":""},{"path":"/news/index.html","id":"dsims-100","dir":"Changelog","previous_headings":"","what":"dsims 1.0.0","title":"dsims 1.0.0","text":"CRAN release: 2022-08-09 New Features Reading transects file - functionality primarily envisioned use within Distance Windows. Enhancements New routine generate covariate values zero-truncated Poisson distribution non integer values. now lower limit number detections simulations introducing bias. now warning system place. low numbers detections may cause issues fitting. must detections parameters model model chance fitting successfully. Note distance sampling good practice recommends minimum 60-80 detections estimating detection function line transects points. Improved histogram.N.ests function now plot either histogram estimates individuals clusters. also provides use.max.reps argument plot can consistent option selected simulation summary. Bug Fixes Fixed simulations cluster size included - formatting change mrds output tables. Added check repeat model definitions. Add code deal equal model criteria values. Fixed bug simulation repetitions successful AICc method fixed Warning indexes parallel runs now fixed","code":""},{"path":"/news/index.html","id":"dsims-022--023","dir":"Changelog","previous_headings":"","what":"dsims 0.2.2 / 0.2.3","title":"dsims 0.2.2 / 0.2.3","text":"CRAN release: 2022-03-31 Bug Fixes Minor modifications stay CRAN compliant.","code":""},{"path":"/news/index.html","id":"dsims-021","dir":"Changelog","previous_headings":"","what":"dsims 0.2.1","title":"dsims 0.2.1","text":"CRAN release: 2022-03-17 New Features Now interfaces new syntax Distance >= 1.0.5 (remain backwards compatible older versions Distance release) Bug Fixes Plus sampling simulations now issue warning modify minus sampling - run previous versions. Fixed default simulation truncation distance 50 analyses (fix dssd consistent release 0.3.2) Fixed recording warning / error indexing parallel simulations","code":""},{"path":"/news/index.html","id":"dsims-020","dir":"Changelog","previous_headings":"","what":"dsims 0.2.0","title":"dsims 0.2.0","text":"CRAN release: 2021-09-01 New Features Delta selection criteria now recorded difference information criteria top 2 best fitting models determined information criteria.] iteration numbers generating warnings errors now stored displayed user can choose results. Bug Fixes Fixed missing RMSE values Fix strata re-ordering cluster size Models -Inf information criteria longer selected Models dht = NULL longer selected Models predict detection values < 1 longer cause errors correctly excluded. Detectibility parameters continuous covariates now checked validated. Fix situation reps excluded due problematic model fitting. bug underlying code windows machines meant segmented lines clipped properly. dependencies sf updated issue fixed. Please update sf run missing segment transects.","code":""},{"path":"/news/index.html","id":"dsims-010","dir":"Changelog","previous_headings":"","what":"dsims 0.1.0","title":"dsims 0.1.0","text":"Enhancements Introducing new Distance Sampling Simulation package. # dsims latest simulation package interfaces dssd designs can generated within R, thus making simulation process lot easier. # dsims also makes use ggplot produce cleaner looking graphics. Region Design: # dsims can make use region creation designs currently dssd. Density: # dsims can generate density objects constant values strata, fitted mgcv gam objects x y explantory covariates formulas x y. Density: Density grids stored sf polygons associated x, y central coordinates density value Population Description: Populations can either created fixed population sizes based densities density grid. Population Description: discrete continuous individual level covariates can included population Detectablity: detectability population can described either half normal, hazard rate uniform detection shapes. Parameters can vary stratum Detectablity: Covariate parameters can included modify scale parameter individual based covariate values. Analyses:number detection function analyses can incorporated simulation model lowest criterion (AIC / AICc / BIC) selected. Analyses:Defining analyses based arguments passed Distance R library. Simulations: Simulations can run serial parallel progress output. Simulations: function run.survey can used create single instance survey check simulation setup.","code":""}]
